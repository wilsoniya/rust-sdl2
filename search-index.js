var searchIndex = {};
searchIndex['sdl2'] = {"items":[[0,"","sdl2","",null,null],[3,"ErrorMessage","","A message with information about an error that SDL has encountered.",null,null],[3,"Sdl","","The SDL context type. Initialize with `sdl2::init()`.",null,null],[3,"AudioSubsystem","","",null,null],[3,"GameControllerSubsystem","","",null,null],[3,"HapticSubsystem","","",null,null],[3,"JoystickSubsystem","","",null,null],[3,"VideoSubsystem","","",null,null],[3,"TimerSubsystem","","",null,null],[3,"EventSubsystem","","",null,null],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping functions.",null,null],[4,"Error","","",null,null],[13,"NoMemError","","",0,null],[13,"ReadError","","",0,null],[13,"WriteError","","",0,null],[13,"SeekError","","",0,null],[13,"UnsupportedError","","",0,null],[5,"init","","Initializes the SDL library.\nThis must be called before using any other SDL function.",null,{"inputs":[],"output":{"name":"sdlresult"}}],[5,"get_error","","",null,{"inputs":[],"output":{"name":"errormessage"}}],[5,"set_error","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"set_error_from_code","","",null,{"inputs":[{"name":"error"}],"output":null}],[5,"clear_error","","",null,{"inputs":[],"output":null}],[0,"clipboard","","",null,null],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with `VideoSubsystem::clipboard()`.",null,null],[11,"clipboard","sdl2","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"clipboardutil"}}],[11,"set_clipboard_text","sdl2::clipboard","",2,{"inputs":[{"name":"clipboardutil"},{"name":"str"}],"output":{"name":"sdlresult"}}],[11,"clipboard_text","","",2,{"inputs":[{"name":"clipboardutil"}],"output":{"name":"sdlresult"}}],[11,"has_clipboard_text","","",2,{"inputs":[{"name":"clipboardutil"}],"output":{"name":"bool"}}],[0,"cpuinfo","sdl2","",null,null],[5,"cpu_count","sdl2::cpuinfo","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"cpu_cache_line_size","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"has_rdtsc","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_alti_vec","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_mmx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_3d_now","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse2","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse3","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse41","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse42","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_avx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"system_ram","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"CACHELINESIZE","","",null,null],[0,"event","sdl2","Event Handling",null,null],[3,"EventPollIterator","sdl2::event","An iterator that calls `EventPump::poll_event()`.",null,null],[3,"EventWaitIterator","","An iterator that calls `EventPump::wait_event()`.",null,null],[3,"EventWaitTimeoutIterator","","An iterator that calls `EventPump::wait_event_timeout()`.",null,null],[4,"EventType","","Types of events that can be delivered.",null,null],[13,"First","","",3,null],[13,"Quit","","",3,null],[13,"AppTerminating","","",3,null],[13,"AppLowMemory","","",3,null],[13,"AppWillEnterBackground","","",3,null],[13,"AppDidEnterBackground","","",3,null],[13,"AppWillEnterForeground","","",3,null],[13,"AppDidEnterForeground","","",3,null],[13,"Window","","",3,null],[13,"KeyDown","","",3,null],[13,"KeyUp","","",3,null],[13,"TextEditing","","",3,null],[13,"TextInput","","",3,null],[13,"MouseMotion","","",3,null],[13,"MouseButtonDown","","",3,null],[13,"MouseButtonUp","","",3,null],[13,"MouseWheel","","",3,null],[13,"JoyAxisMotion","","",3,null],[13,"JoyBallMotion","","",3,null],[13,"JoyHatMotion","","",3,null],[13,"JoyButtonDown","","",3,null],[13,"JoyButtonUp","","",3,null],[13,"JoyDeviceAdded","","",3,null],[13,"JoyDeviceRemoved","","",3,null],[13,"ControllerAxisMotion","","",3,null],[13,"ControllerButtonDown","","",3,null],[13,"ControllerButtonUp","","",3,null],[13,"ControllerDeviceAdded","","",3,null],[13,"ControllerDeviceRemoved","","",3,null],[13,"ControllerDeviceRemapped","","",3,null],[13,"FingerDown","","",3,null],[13,"FingerUp","","",3,null],[13,"FingerMotion","","",3,null],[13,"DollarGesture","","",3,null],[13,"DollarRecord","","",3,null],[13,"MultiGesture","","",3,null],[13,"ClipboardUpdate","","",3,null],[13,"DropFile","","",3,null],[13,"User","","",3,null],[13,"Last","","",3,null],[4,"WindowEventId","","An enum of window events.",null,null],[13,"None","","",4,null],[13,"Shown","","",4,null],[13,"Hidden","","",4,null],[13,"Exposed","","",4,null],[13,"Moved","","",4,null],[13,"Resized","","",4,null],[13,"SizeChanged","","",4,null],[13,"Minimized","","",4,null],[13,"Maximized","","",4,null],[13,"Restored","","",4,null],[13,"Enter","","",4,null],[13,"Leave","","",4,null],[13,"FocusGained","","",4,null],[13,"FocusLost","","",4,null],[13,"Close","","",4,null],[4,"Event","","Different event types.",null,null],[13,"Quit","","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppTerminating","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppLowMemory","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppWillEnterBackground","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppDidEnterBackground","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppWillEnterForeground","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"AppDidEnterForeground","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"Window","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"win_event_id","","",5,null],[12,"data1","","",5,null],[12,"data2","","",5,null],[13,"KeyDown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"keycode","","",5,null],[12,"scancode","","",5,null],[12,"keymod","","",5,null],[12,"repeat","","",5,null],[13,"KeyUp","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"keycode","","",5,null],[12,"scancode","","",5,null],[12,"keymod","","",5,null],[12,"repeat","","",5,null],[13,"TextEditing","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"text","","",5,null],[12,"start","","",5,null],[12,"length","","",5,null],[13,"TextInput","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"text","","",5,null],[13,"MouseMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"which","","",5,null],[12,"mousestate","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"xrel","","",5,null],[12,"yrel","","",5,null],[13,"MouseButtonDown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"which","","",5,null],[12,"mouse_btn","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[13,"MouseButtonUp","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"which","","",5,null],[12,"mouse_btn","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[13,"MouseWheel","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"which","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[13,"JoyAxisMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"axis_idx","","",5,null],[12,"value","","",5,null],[13,"JoyBallMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"ball_idx","","",5,null],[12,"xrel","","",5,null],[12,"yrel","","",5,null],[13,"JoyHatMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"hat_idx","","",5,null],[12,"state","","",5,null],[13,"JoyButtonDown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"button_idx","","",5,null],[13,"JoyButtonUp","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"button_idx","","",5,null],[13,"JoyDeviceAdded","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[13,"JoyDeviceRemoved","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[13,"ControllerAxisMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"axis","","",5,null],[12,"value","","",5,null],[13,"ControllerButtonDown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"button","","",5,null],[13,"ControllerButtonUp","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[12,"button","","",5,null],[13,"ControllerDeviceAdded","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[13,"ControllerDeviceRemoved","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[13,"ControllerDeviceRemapped","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"which","","",5,null],[13,"FingerDown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"finger_id","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"dx","","",5,null],[12,"dy","","",5,null],[12,"pressure","","",5,null],[13,"FingerUp","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"finger_id","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"dx","","",5,null],[12,"dy","","",5,null],[12,"pressure","","",5,null],[13,"FingerMotion","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"finger_id","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"dx","","",5,null],[12,"dy","","",5,null],[12,"pressure","","",5,null],[13,"DollarGesture","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"gesture_id","","",5,null],[12,"num_fingers","","",5,null],[12,"error","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[13,"DollarRecord","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"gesture_id","","",5,null],[12,"num_fingers","","",5,null],[12,"error","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[13,"MultiGesture","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"touch_id","","",5,null],[12,"d_theta","","",5,null],[12,"d_dist","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"num_fingers","","",5,null],[13,"ClipboardUpdate","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[13,"DropFile","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"filename","","",5,null],[13,"User","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"window_id","","",5,null],[12,"type_","","",5,null],[12,"code","","",5,null],[13,"Unknown","sdl2::event","",5,null],[12,"timestamp","sdl2::event::Event","",5,null],[12,"type_","","",5,null],[11,"flush_event","sdl2","Removes all events in the event queue that match the specified event type.",6,{"inputs":[{"name":"eventsubsystem"},{"name":"eventtype"}],"output":null}],[11,"flush_events","","Removes all events in the event queue that match the specified type range.",6,{"inputs":[{"name":"eventsubsystem"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"peek_events","","Reads the events at the front of the event queue, until the maximum amount\nof events is read.",6,{"inputs":[{"name":"eventsubsystem"},{"name":"u32"}],"output":{"name":"b"}}],[11,"push_event","","Pushes an event to the event queue.",6,{"inputs":[{"name":"eventsubsystem"},{"name":"event"}],"output":{"name":"sdlresult"}}],[11,"fmt","sdl2::event","",3,{"inputs":[{"name":"eventtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"eventtype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"eventtype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"eventtype"}],"output":{"name":"eventtype"}}],[11,"from_i64","","",3,{"inputs":[{"name":"eventtype"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"eventtype"},{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"windoweventid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"windoweventid"},{"name":"windoweventid"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"windoweventid"},{"name":"windoweventid"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"windoweventid"}],"output":{"name":"windoweventid"}}],[11,"eq","","",5,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"fmt","","",5,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",7,{"inputs":[{"name":"eventpump"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"enable_event","","Enable an event type. Returns if the event type was enabled before the call.",7,{"inputs":[{"name":"eventpump"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"disable_event","","Disable an event type. Returns if the event type was enabled before the call.",7,{"inputs":[{"name":"eventpump"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"poll_event","","Polls for currently pending events.",7,{"inputs":[{"name":"eventpump"}],"output":{"name":"option"}}],[11,"poll_iter","","Returns a polling iterator that calls `poll_event()`.\nThe iterator will terminate once there are no more pending events.",7,{"inputs":[{"name":"eventpump"}],"output":{"name":"eventpolliterator"}}],[11,"pump_events","","Pumps the event loop, gathering events from the input devices.",7,{"inputs":[{"name":"eventpump"}],"output":null}],[11,"wait_event","","Waits indefinitely for the next available event.",7,{"inputs":[{"name":"eventpump"}],"output":{"name":"event"}}],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for the next available event.",7,{"inputs":[{"name":"eventpump"},{"name":"u32"}],"output":{"name":"option"}}],[11,"wait_iter","","Returns a waiting iterator that calls `wait_event()`.",7,{"inputs":[{"name":"eventpump"}],"output":{"name":"eventwaititerator"}}],[11,"wait_timeout_iter","","Returns a waiting iterator that calls `wait_event_timeout()`.",7,{"inputs":[{"name":"eventpump"},{"name":"u32"}],"output":{"name":"eventwaittimeoutiterator"}}],[11,"keyboard_state","","",7,{"inputs":[{"name":"eventpump"}],"output":{"name":"keyboardstate"}}],[11,"next","sdl2::event","",8,{"inputs":[{"name":"eventpolliterator"}],"output":{"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"eventwaititerator"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"eventwaittimeoutiterator"}],"output":{"name":"option"}}],[0,"filesystem","sdl2","",null,null],[5,"base_path","sdl2::filesystem","",null,{"inputs":[],"output":{"name":"sdlresult"}}],[5,"pref_path","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"sdlresult"}}],[0,"touch","sdl2","",null,null],[5,"num_touch_devices","sdl2::touch","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"touch_device","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"touchdevice"}}],[5,"num_touch_fingers","","",null,{"inputs":[{"name":"touchdevice"}],"output":{"name":"i32"}}],[5,"touch_finger","","",null,{"inputs":[{"name":"touchdevice"},{"name":"i32"}],"output":{"name":"option"}}],[6,"Finger","","",null,null],[6,"TouchDevice","","",null,null],[0,"joystick","sdl2","",null,null],[3,"Joystick","sdl2::joystick","Wrapper around the SDL_Joystick object",null,null],[3,"Guid","","Wrapper around a SDL_JoystickGUID, a globally unique identifier\nfor a joystick.",null,null],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all\ncombinations make sense: 5 for instance would mean up and down at\nthe same time... To simplify things I turn it into an enum which\nis how the SDL2 docs present it anyway (using macros).",null,null],[13,"Centered","","",11,null],[13,"Up","","",11,null],[13,"Right","","",11,null],[13,"Down","","",11,null],[13,"Left","","",11,null],[13,"RightUp","","",11,null],[13,"RightDown","","",11,null],[13,"LeftUp","","",11,null],[13,"Leftdown","","",11,null],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",12,{"inputs":[{"name":"joysticksubsystem"}],"output":{"name":"sdlresult"}}],[11,"open","","Attempt to open the joystick at number `id` and return it.",12,{"inputs":[{"name":"joysticksubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"name_for_index","","Return the name of the joystick at index `id`",12,{"inputs":[{"name":"joysticksubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"device_guid","","Get the GUID for the joystick number `id`",12,{"inputs":[{"name":"joysticksubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"set_event_state","","If state is `true` joystick events are processed, otherwise\nthey're ignored.",12,{"inputs":[{"name":"joysticksubsystem"},{"name":"bool"}],"output":null}],[11,"event_state","","Return `true` if joystick events are processed.",12,{"inputs":[{"name":"joysticksubsystem"}],"output":{"name":"bool"}}],[11,"update","","Force joystick update when not using the event loop",12,{"inputs":[{"name":"joysticksubsystem"}],"output":null}],[11,"subsystem","sdl2::joystick","",13,{"inputs":[{"name":"joystick"}],"output":{"name":"joysticksubsystem"}}],[11,"name","","Return the name of the joystick or an empty string if no name\nis found.",13,{"inputs":[{"name":"joystick"}],"output":{"name":"string"}}],[11,"attached","","Return true if the joystick has been opened and currently\nconnected.",13,{"inputs":[{"name":"joystick"}],"output":{"name":"bool"}}],[11,"instance_id","","",13,{"inputs":[{"name":"joystick"}],"output":{"name":"i32"}}],[11,"guid","","Retreive the joystick's GUID",13,{"inputs":[{"name":"joystick"}],"output":{"name":"guid"}}],[11,"num_axes","","Retreive the number of axes for this joystick",13,{"inputs":[{"name":"joystick"}],"output":{"name":"u32"}}],[11,"axis","","Gets the position of the given `axis`.",13,{"inputs":[{"name":"joystick"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"num_buttons","","Retreive the number of buttons for this joystick",13,{"inputs":[{"name":"joystick"}],"output":{"name":"u32"}}],[11,"button","","Return `Ok(true)` if `button` is pressed.",13,{"inputs":[{"name":"joystick"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"num_balls","","Retreive the number of balls for this joystick",13,{"inputs":[{"name":"joystick"}],"output":{"name":"u32"}}],[11,"ball","","Return a pair `(dx, dy)` containing the difference in axis\nposition since the last poll",13,{"inputs":[{"name":"joystick"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"num_hats","","Retreive the number of balls for this joystick",13,{"inputs":[{"name":"joystick"}],"output":{"name":"u32"}}],[11,"hat","","Return the position of `hat` for this joystick",13,{"inputs":[{"name":"joystick"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"drop","","",13,{"inputs":[{"name":"joystick"}],"output":null}],[11,"hash","","",14,null],[11,"eq","","",14,{"inputs":[{"name":"guid"},{"name":"guid"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"guid"},{"name":"guid"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"guid"}],"output":{"name":"guid"}}],[11,"from_string","","Create a GUID from a string representation.",14,{"inputs":[{"name":"guid"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_zero","","Return `true` if GUID is full 0s",14,{"inputs":[{"name":"guid"}],"output":{"name":"bool"}}],[11,"string","","Return a String representation of GUID",14,{"inputs":[{"name":"guid"}],"output":{"name":"string"}}],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",14,{"inputs":[{"name":"guid"}],"output":{"name":"sdl_joystickguid"}}],[11,"fmt","","",14,{"inputs":[{"name":"guid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"hatstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"hatstate"},{"name":"hatstate"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"hatstate"},{"name":"hatstate"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"hatstate"}],"output":{"name":"hatstate"}}],[11,"from_raw","","",11,{"inputs":[{"name":"hatstate"},{"name":"u8"}],"output":{"name":"hatstate"}}],[0,"controller","sdl2","",null,null],[3,"GameController","sdl2::controller","Wrapper around the SDL_GameController object",null,null],[4,"Axis","","",null,null],[13,"LeftX","","",15,null],[13,"LeftY","","",15,null],[13,"RightX","","",15,null],[13,"RightY","","",15,null],[13,"TriggerLeft","","",15,null],[13,"TriggerRight","","",15,null],[4,"Button","","",null,null],[13,"A","","",16,null],[13,"B","","",16,null],[13,"X","","",16,null],[13,"Y","","",16,null],[13,"Back","","",16,null],[13,"Guide","","",16,null],[13,"Start","","",16,null],[13,"LeftStick","","",16,null],[13,"RightStick","","",16,null],[13,"LeftShoulder","","",16,null],[13,"RightShoulder","","",16,null],[13,"DPadUp","","",16,null],[13,"DPadDown","","",16,null],[13,"DPadLeft","","",16,null],[13,"DPadRight","","",16,null],[4,"MappingStatus","","Possible return values for `add_mapping`",null,null],[13,"Added","","",17,null],[13,"Updated","","",17,null],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",18,{"inputs":[{"name":"gamecontrollersubsystem"}],"output":{"name":"sdlresult"}}],[11,"is_game_controller","","Return true if the joystick at index `id` is a game controller.",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"open","","Attempt to open the controller number `id` and return\nit. Controller IDs are the same as joystick IDs and the\nmaximum number can be retreived using the `SDL_NumJoysticks`\nfunction.",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"name_for_index","","Return the name of the controller at index `id`",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"set_event_state","","If state is `true` controller events are processed, otherwise\nthey're ignored.",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"bool"}],"output":null}],[11,"event_state","","Return `true` if controller events are processed.",18,{"inputs":[{"name":"gamecontrollersubsystem"}],"output":{"name":"bool"}}],[11,"add_mapping","","Add a new mapping from a mapping string",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"str"}],"output":{"name":"sdlresult"}}],[11,"mapping_for_guid","","",18,{"inputs":[{"name":"gamecontrollersubsystem"},{"name":"guid"}],"output":{"name":"sdlresult"}}],[11,"update","","Force controller update when not using the event loop",18,{"inputs":[{"name":"gamecontrollersubsystem"}],"output":null}],[11,"fmt","sdl2::controller","",15,{"inputs":[{"name":"axis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"eq","","",15,{"inputs":[{"name":"axis"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"axis"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"axis"}],"output":{"name":"axis"}}],[11,"from_string","","Return the Axis from a string description in the same format\nused by the game controller mapping strings.",15,{"inputs":[{"name":"axis"},{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given axis in the same format using by\nthe game controller mapping strings",15,{"inputs":[{"name":"axis"}],"output":{"name":"string"}}],[11,"from_ll","","",15,{"inputs":[{"name":"axis"},{"name":"sdl_gamecontrolleraxis"}],"output":{"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"eq","","",16,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"from_string","","Return the Button from a string description in the same format\nused by the game controller mapping strings.",16,{"inputs":[{"name":"button"},{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given button in the same format using by\nthe game controller mapping strings",16,{"inputs":[{"name":"button"}],"output":{"name":"string"}}],[11,"from_ll","","",16,{"inputs":[{"name":"button"},{"name":"sdl_gamecontrollerbutton"}],"output":{"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"mappingstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"eq","","",17,{"inputs":[{"name":"mappingstatus"},{"name":"mappingstatus"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"mappingstatus"},{"name":"mappingstatus"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"mappingstatus"}],"output":{"name":"mappingstatus"}}],[11,"subsystem","","",19,{"inputs":[{"name":"gamecontroller"}],"output":{"name":"gamecontrollersubsystem"}}],[11,"name","","Return the name of the controller or an empty string if no\nname is found.",19,{"inputs":[{"name":"gamecontroller"}],"output":{"name":"string"}}],[11,"mapping","","Return a String describing the controller's button and axis\nmappings",19,{"inputs":[{"name":"gamecontroller"}],"output":{"name":"string"}}],[11,"attached","","Return true if the controller has been opened and currently\nconnected.",19,{"inputs":[{"name":"gamecontroller"}],"output":{"name":"bool"}}],[11,"axis","","Get the position of the given `axis`",19,{"inputs":[{"name":"gamecontroller"},{"name":"axis"}],"output":{"name":"i16"}}],[11,"button","","Returns `true` if `button` is pressed.",19,{"inputs":[{"name":"gamecontroller"},{"name":"button"}],"output":{"name":"bool"}}],[11,"drop","","",19,{"inputs":[{"name":"gamecontroller"}],"output":null}],[0,"haptic","sdl2","Haptic Functions",null,null],[0,"keyboard","","",null,null],[3,"Mod","sdl2::keyboard","",null,null],[3,"KeyboardState","","",null,null],[3,"ScancodeIterator","","",null,null],[3,"PressedScancodeIterator","","",null,null],[3,"KeyboardUtil","","Keyboard utility functions. Access with `Sdl::keyboard()`.",null,null],[3,"TextInputUtil","","Text input utility functions. Access with `VideoSubsystem::text_input()`.",null,null],[4,"Keycode","","",null,null],[13,"Backspace","","",20,null],[13,"Tab","","",20,null],[13,"Return","","",20,null],[13,"Escape","","",20,null],[13,"Space","","",20,null],[13,"Exclaim","","",20,null],[13,"Quotedbl","","",20,null],[13,"Hash","","",20,null],[13,"Dollar","","",20,null],[13,"Percent","","",20,null],[13,"Ampersand","","",20,null],[13,"Quote","","",20,null],[13,"LeftParen","","",20,null],[13,"RightParen","","",20,null],[13,"Asterisk","","",20,null],[13,"Plus","","",20,null],[13,"Comma","","",20,null],[13,"Minus","","",20,null],[13,"Period","","",20,null],[13,"Slash","","",20,null],[13,"Num0","","",20,null],[13,"Num1","","",20,null],[13,"Num2","","",20,null],[13,"Num3","","",20,null],[13,"Num4","","",20,null],[13,"Num5","","",20,null],[13,"Num6","","",20,null],[13,"Num7","","",20,null],[13,"Num8","","",20,null],[13,"Num9","","",20,null],[13,"Colon","","",20,null],[13,"Semicolon","","",20,null],[13,"Less","","",20,null],[13,"Equals","","",20,null],[13,"Greater","","",20,null],[13,"Question","","",20,null],[13,"At","","",20,null],[13,"LeftBracket","","",20,null],[13,"Backslash","","",20,null],[13,"RightBracket","","",20,null],[13,"Caret","","",20,null],[13,"Underscore","","",20,null],[13,"Backquote","","",20,null],[13,"A","","",20,null],[13,"B","","",20,null],[13,"C","","",20,null],[13,"D","","",20,null],[13,"E","","",20,null],[13,"F","","",20,null],[13,"G","","",20,null],[13,"H","","",20,null],[13,"I","","",20,null],[13,"J","","",20,null],[13,"K","","",20,null],[13,"L","","",20,null],[13,"M","","",20,null],[13,"N","","",20,null],[13,"O","","",20,null],[13,"P","","",20,null],[13,"Q","","",20,null],[13,"R","","",20,null],[13,"S","","",20,null],[13,"T","","",20,null],[13,"U","","",20,null],[13,"V","","",20,null],[13,"W","","",20,null],[13,"X","","",20,null],[13,"Y","","",20,null],[13,"Z","","",20,null],[13,"Delete","","",20,null],[13,"CapsLock","","",20,null],[13,"F1","","",20,null],[13,"F2","","",20,null],[13,"F3","","",20,null],[13,"F4","","",20,null],[13,"F5","","",20,null],[13,"F6","","",20,null],[13,"F7","","",20,null],[13,"F8","","",20,null],[13,"F9","","",20,null],[13,"F10","","",20,null],[13,"F11","","",20,null],[13,"F12","","",20,null],[13,"PrintScreen","","",20,null],[13,"ScrollLock","","",20,null],[13,"Pause","","",20,null],[13,"Insert","","",20,null],[13,"Home","","",20,null],[13,"PageUp","","",20,null],[13,"End","","",20,null],[13,"PageDown","","",20,null],[13,"Right","","",20,null],[13,"Left","","",20,null],[13,"Down","","",20,null],[13,"Up","","",20,null],[13,"NumLockClear","","",20,null],[13,"KpDivide","","",20,null],[13,"KpMultiply","","",20,null],[13,"KpMinus","","",20,null],[13,"KpPlus","","",20,null],[13,"KpEnter","","",20,null],[13,"Kp1","","",20,null],[13,"Kp2","","",20,null],[13,"Kp3","","",20,null],[13,"Kp4","","",20,null],[13,"Kp5","","",20,null],[13,"Kp6","","",20,null],[13,"Kp7","","",20,null],[13,"Kp8","","",20,null],[13,"Kp9","","",20,null],[13,"Kp0","","",20,null],[13,"KpPeriod","","",20,null],[13,"Application","","",20,null],[13,"Power","","",20,null],[13,"KpEquals","","",20,null],[13,"F13","","",20,null],[13,"F14","","",20,null],[13,"F15","","",20,null],[13,"F16","","",20,null],[13,"F17","","",20,null],[13,"F18","","",20,null],[13,"F19","","",20,null],[13,"F20","","",20,null],[13,"F21","","",20,null],[13,"F22","","",20,null],[13,"F23","","",20,null],[13,"F24","","",20,null],[13,"Execute","","",20,null],[13,"Help","","",20,null],[13,"Menu","","",20,null],[13,"Select","","",20,null],[13,"Stop","","",20,null],[13,"Again","","",20,null],[13,"Undo","","",20,null],[13,"Cut","","",20,null],[13,"Copy","","",20,null],[13,"Paste","","",20,null],[13,"Find","","",20,null],[13,"Mute","","",20,null],[13,"VolumeUp","","",20,null],[13,"VolumeDown","","",20,null],[13,"KpComma","","",20,null],[13,"KpEqualsAS400","","",20,null],[13,"AltErase","","",20,null],[13,"Sysreq","","",20,null],[13,"Cancel","","",20,null],[13,"Clear","","",20,null],[13,"Prior","","",20,null],[13,"Return2","","",20,null],[13,"Separator","","",20,null],[13,"Out","","",20,null],[13,"Oper","","",20,null],[13,"ClearAgain","","",20,null],[13,"CrSel","","",20,null],[13,"ExSel","","",20,null],[13,"Kp00","","",20,null],[13,"Kp000","","",20,null],[13,"ThousandsSeparator","","",20,null],[13,"DecimalSeparator","","",20,null],[13,"CurrencyUnit","","",20,null],[13,"CurrencySubUnit","","",20,null],[13,"KpLeftParen","","",20,null],[13,"KpRightParen","","",20,null],[13,"KpLeftBrace","","",20,null],[13,"KpRightBrace","","",20,null],[13,"KpTab","","",20,null],[13,"KpBackspace","","",20,null],[13,"KpA","","",20,null],[13,"KpB","","",20,null],[13,"KpC","","",20,null],[13,"KpD","","",20,null],[13,"KpE","","",20,null],[13,"KpF","","",20,null],[13,"KpXor","","",20,null],[13,"KpPower","","",20,null],[13,"KpPercent","","",20,null],[13,"KpLess","","",20,null],[13,"KpGreater","","",20,null],[13,"KpAmpersand","","",20,null],[13,"KpDblAmpersand","","",20,null],[13,"KpVerticalBar","","",20,null],[13,"KpDblVerticalBar","","",20,null],[13,"KpColon","","",20,null],[13,"KpHash","","",20,null],[13,"KpSpace","","",20,null],[13,"KpAt","","",20,null],[13,"KpExclam","","",20,null],[13,"KpMemStore","","",20,null],[13,"KpMemRecall","","",20,null],[13,"KpMemClear","","",20,null],[13,"KpMemAdd","","",20,null],[13,"KpMemSubtract","","",20,null],[13,"KpMemMultiply","","",20,null],[13,"KpMemDivide","","",20,null],[13,"KpPlusMinus","","",20,null],[13,"KpCear","","",20,null],[13,"KpClearEntry","","",20,null],[13,"KpBinary","","",20,null],[13,"KpOctal","","",20,null],[13,"KpDecimal","","",20,null],[13,"KpHexadecimal","","",20,null],[13,"LCtrl","","",20,null],[13,"LShift","","",20,null],[13,"LAlt","","",20,null],[13,"LGui","","",20,null],[13,"RCtrl","","",20,null],[13,"RShift","","",20,null],[13,"RAlt","","",20,null],[13,"RGui","","",20,null],[13,"Mode","","",20,null],[13,"AudioNext","","",20,null],[13,"AudioPrev","","",20,null],[13,"AudioStop","","",20,null],[13,"AudioPlay","","",20,null],[13,"AudioMute","","",20,null],[13,"MediaSelect","","",20,null],[13,"Www","","",20,null],[13,"Mail","","",20,null],[13,"Calculator","","",20,null],[13,"Computer","","",20,null],[13,"AcSearch","","",20,null],[13,"AcHome","","",20,null],[13,"AcBack","","",20,null],[13,"AcForward","","",20,null],[13,"AcStop","","",20,null],[13,"AcRefresh","","",20,null],[13,"AcBookmarks","","",20,null],[13,"BrightnessDown","","",20,null],[13,"BrightnessUp","","",20,null],[13,"DisplaySwitch","","",20,null],[13,"KbdIllumToggle","","",20,null],[13,"KbdIllumDown","","",20,null],[13,"KbdIllumUp","","",20,null],[13,"Eject","","",20,null],[13,"Sleep","","",20,null],[4,"Scancode","","",null,null],[13,"A","","",21,null],[13,"B","","",21,null],[13,"C","","",21,null],[13,"D","","",21,null],[13,"E","","",21,null],[13,"F","","",21,null],[13,"G","","",21,null],[13,"H","","",21,null],[13,"I","","",21,null],[13,"J","","",21,null],[13,"K","","",21,null],[13,"L","","",21,null],[13,"M","","",21,null],[13,"N","","",21,null],[13,"O","","",21,null],[13,"P","","",21,null],[13,"Q","","",21,null],[13,"R","","",21,null],[13,"S","","",21,null],[13,"T","","",21,null],[13,"U","","",21,null],[13,"V","","",21,null],[13,"W","","",21,null],[13,"X","","",21,null],[13,"Y","","",21,null],[13,"Z","","",21,null],[13,"Num1","","",21,null],[13,"Num2","","",21,null],[13,"Num3","","",21,null],[13,"Num4","","",21,null],[13,"Num5","","",21,null],[13,"Num6","","",21,null],[13,"Num7","","",21,null],[13,"Num8","","",21,null],[13,"Num9","","",21,null],[13,"Num0","","",21,null],[13,"Return","","",21,null],[13,"Escape","","",21,null],[13,"Backspace","","",21,null],[13,"Tab","","",21,null],[13,"Space","","",21,null],[13,"Minus","","",21,null],[13,"Equals","","",21,null],[13,"LeftBracket","","",21,null],[13,"RightBracket","","",21,null],[13,"Backslash","","",21,null],[13,"NonUsHash","","",21,null],[13,"Semicolon","","",21,null],[13,"Apostrophe","","",21,null],[13,"Grave","","",21,null],[13,"Comma","","",21,null],[13,"Period","","",21,null],[13,"Slash","","",21,null],[13,"CapsLock","","",21,null],[13,"F1","","",21,null],[13,"F2","","",21,null],[13,"F3","","",21,null],[13,"F4","","",21,null],[13,"F5","","",21,null],[13,"F6","","",21,null],[13,"F7","","",21,null],[13,"F8","","",21,null],[13,"F9","","",21,null],[13,"F10","","",21,null],[13,"F11","","",21,null],[13,"F12","","",21,null],[13,"PrintScreen","","",21,null],[13,"ScrollLock","","",21,null],[13,"Pause","","",21,null],[13,"Insert","","",21,null],[13,"Home","","",21,null],[13,"PageUp","","",21,null],[13,"Delete","","",21,null],[13,"End","","",21,null],[13,"PageDown","","",21,null],[13,"Right","","",21,null],[13,"Left","","",21,null],[13,"Down","","",21,null],[13,"Up","","",21,null],[13,"NumLockClear","","",21,null],[13,"KpDivide","","",21,null],[13,"KpMultiply","","",21,null],[13,"KpMinus","","",21,null],[13,"KpPlus","","",21,null],[13,"KpEnter","","",21,null],[13,"Kp1","","",21,null],[13,"Kp2","","",21,null],[13,"Kp3","","",21,null],[13,"Kp4","","",21,null],[13,"Kp5","","",21,null],[13,"Kp6","","",21,null],[13,"Kp7","","",21,null],[13,"Kp8","","",21,null],[13,"Kp9","","",21,null],[13,"Kp0","","",21,null],[13,"KpPeriod","","",21,null],[13,"NonUsBackslash","","",21,null],[13,"Application","","",21,null],[13,"Power","","",21,null],[13,"KpEquals","","",21,null],[13,"F13","","",21,null],[13,"F14","","",21,null],[13,"F15","","",21,null],[13,"F16","","",21,null],[13,"F17","","",21,null],[13,"F18","","",21,null],[13,"F19","","",21,null],[13,"F20","","",21,null],[13,"F21","","",21,null],[13,"F22","","",21,null],[13,"F23","","",21,null],[13,"F24","","",21,null],[13,"Execute","","",21,null],[13,"Help","","",21,null],[13,"Menu","","",21,null],[13,"Select","","",21,null],[13,"Stop","","",21,null],[13,"Again","","",21,null],[13,"Undo","","",21,null],[13,"Cut","","",21,null],[13,"Copy","","",21,null],[13,"Paste","","",21,null],[13,"Find","","",21,null],[13,"Mute","","",21,null],[13,"VolumeUp","","",21,null],[13,"VolumeDown","","",21,null],[13,"KpComma","","",21,null],[13,"KpEqualsAS400","","",21,null],[13,"International1","","",21,null],[13,"International2","","",21,null],[13,"International3","","",21,null],[13,"International4","","",21,null],[13,"International5","","",21,null],[13,"International6","","",21,null],[13,"International7","","",21,null],[13,"International8","","",21,null],[13,"International9","","",21,null],[13,"Lang1","","",21,null],[13,"Lang2","","",21,null],[13,"Lang3","","",21,null],[13,"Lang4","","",21,null],[13,"Lang5","","",21,null],[13,"Lang6","","",21,null],[13,"Lang7","","",21,null],[13,"Lang8","","",21,null],[13,"Lang9","","",21,null],[13,"AltErase","","",21,null],[13,"SysReq","","",21,null],[13,"Cancel","","",21,null],[13,"Clear","","",21,null],[13,"Prior","","",21,null],[13,"Return2","","",21,null],[13,"Separator","","",21,null],[13,"Out","","",21,null],[13,"Oper","","",21,null],[13,"ClearAgain","","",21,null],[13,"Crse","","",21,null],[13,"ExseL","","",21,null],[13,"Kp00","","",21,null],[13,"Kp000","","",21,null],[13,"ThousandsSeparator","","",21,null],[13,"DecimalSeparator","","",21,null],[13,"CurrencyUnit","","",21,null],[13,"CurrencySubUnit","","",21,null],[13,"KpLeftParen","","",21,null],[13,"KpRightParen","","",21,null],[13,"KpLeftBrace","","",21,null],[13,"KpRightBrace","","",21,null],[13,"KpTab","","",21,null],[13,"KpBackspace","","",21,null],[13,"KpA","","",21,null],[13,"KpB","","",21,null],[13,"KpC","","",21,null],[13,"KpD","","",21,null],[13,"KpE","","",21,null],[13,"KpF","","",21,null],[13,"KpXor","","",21,null],[13,"KpPower","","",21,null],[13,"KpPercent","","",21,null],[13,"KpLess","","",21,null],[13,"KpGreater","","",21,null],[13,"KpAmpersand","","",21,null],[13,"KpDblAmpersand","","",21,null],[13,"KpVerticalBar","","",21,null],[13,"KpDblVerticalBar","","",21,null],[13,"KpColon","","",21,null],[13,"KpHash","","",21,null],[13,"KpSpace","","",21,null],[13,"KpAt","","",21,null],[13,"KpExclam","","",21,null],[13,"KpMemStore","","",21,null],[13,"KpMemRecall","","",21,null],[13,"KpMemClear","","",21,null],[13,"KpMemAdd","","",21,null],[13,"KpMemSubtract","","",21,null],[13,"KpMemMultiply","","",21,null],[13,"KpMemDivide","","",21,null],[13,"KpPlusMinus","","",21,null],[13,"KpClear","","",21,null],[13,"KpClearEntry","","",21,null],[13,"KpBinary","","",21,null],[13,"KpOoctal","","",21,null],[13,"KpDecimal","","",21,null],[13,"KpHexadecimal","","",21,null],[13,"LCtrl","","",21,null],[13,"LShift","","",21,null],[13,"LAlt","","",21,null],[13,"LGui","","",21,null],[13,"RCtrl","","",21,null],[13,"RShift","","",21,null],[13,"RAlt","","",21,null],[13,"RGui","","",21,null],[13,"Mode","","",21,null],[13,"AudioNext","","",21,null],[13,"AudioPrev","","",21,null],[13,"AudioStop","","",21,null],[13,"AudioPlay","","",21,null],[13,"AudioMute","","",21,null],[13,"MediaSelect","","",21,null],[13,"Www","","",21,null],[13,"Mail","","",21,null],[13,"Calculator","","",21,null],[13,"Computer","","",21,null],[13,"AcSearch","","",21,null],[13,"AcHome","","",21,null],[13,"AcBack","","",21,null],[13,"AcForward","","",21,null],[13,"AcStop","","",21,null],[13,"AcRefresh","","",21,null],[13,"AcBookmarks","","",21,null],[13,"BrightnessDown","","",21,null],[13,"BrightnessUp","","",21,null],[13,"DisplaySwitch","","",21,null],[13,"KbdIllumToggle","","",21,null],[13,"KbdIllumDown","","",21,null],[13,"KbdIllumUp","","",21,null],[13,"Eject","","",21,null],[13,"Sleep","","",21,null],[13,"App1","","",21,null],[13,"App2","","",21,null],[13,"Num","","",21,null],[11,"fmt","","",20,{"inputs":[{"name":"keycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"keycode"},{"name":"keycode"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"keycode"},{"name":"keycode"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"keycode"}],"output":{"name":"keycode"}}],[11,"to_i64","","",20,{"inputs":[{"name":"keycode"}],"output":{"name":"option"}}],[11,"to_u64","","",20,{"inputs":[{"name":"keycode"}],"output":{"name":"option"}}],[11,"to_isize","","",20,{"inputs":[{"name":"keycode"}],"output":{"name":"option"}}],[11,"from_i64","","",20,{"inputs":[{"name":"keycode"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",20,{"inputs":[{"name":"keycode"},{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"keycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if there is no corresponding virtual key.",20,{"inputs":[{"name":"keycode"},{"name":"scancode"}],"output":{"name":"option"}}],[11,"from_name","","",20,{"inputs":[{"name":"keycode"},{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",20,{"inputs":[{"name":"keycode"}],"output":{"name":"string"}}],[11,"fmt","","",21,{"inputs":[{"name":"scancode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"scancode"},{"name":"scancode"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"scancode"},{"name":"scancode"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"scancode"}],"output":{"name":"scancode"}}],[11,"to_i64","","",21,{"inputs":[{"name":"scancode"}],"output":{"name":"option"}}],[11,"to_u64","","",21,{"inputs":[{"name":"scancode"}],"output":{"name":"option"}}],[11,"to_isize","","",21,{"inputs":[{"name":"scancode"}],"output":{"name":"option"}}],[11,"from_i64","","",21,{"inputs":[{"name":"scancode"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",21,{"inputs":[{"name":"scancode"},{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",21,{"inputs":[{"name":"scancode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if there is no corresponding scancode.",21,{"inputs":[{"name":"scancode"},{"name":"keycode"}],"output":{"name":"option"}}],[11,"from_name","","",21,{"inputs":[{"name":"scancode"},{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",21,{"inputs":[{"name":"scancode"}],"output":{"name":"str"}}],[17,"NOMOD","","",null,null],[17,"LSHIFTMOD","","",null,null],[17,"RSHIFTMOD","","",null,null],[17,"LCTRLMOD","","",null,null],[17,"RCTRLMOD","","",null,null],[17,"LALTMOD","","",null,null],[17,"RALTMOD","","",null,null],[17,"LGUIMOD","","",null,null],[17,"RGUIMOD","","",null,null],[17,"NUMMOD","","",null,null],[17,"CAPSMOD","","",null,null],[17,"MODEMOD","","",null,null],[17,"RESERVEDMOD","","",null,null],[11,"hash","","",22,null],[11,"cmp","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"eq","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"mod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",22,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"all","","Returns the set containing all flags.",22,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"bits","","Returns the raw value of the flags currently stored.",22,{"inputs":[{"name":"mod"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",22,{"inputs":[{"name":"mod"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",22,{"inputs":[{"name":"mod"},{"name":"u32"}],"output":{"name":"mod"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,{"inputs":[{"name":"mod"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",22,{"inputs":[{"name":"mod"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"sub","","Returns the set difference of the two sets of flags.",22,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"not","","Returns the complement of this set of flags.",22,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"from_iter","","",22,{"inputs":[{"name":"mod"},{"name":"t"}],"output":{"name":"mod"}}],[11,"new","","",23,{"inputs":[{"name":"keyboardstate"},{"name":"eventpump"}],"output":{"name":"keyboardstate"}}],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",23,{"inputs":[{"name":"keyboardstate"},{"name":"scancode"}],"output":{"name":"bool"}}],[11,"scancodes","","Returns an iterator all scancodes with a boolean indicating if the scancode is pressed.",23,{"inputs":[{"name":"keyboardstate"}],"output":{"name":"scancodeiterator"}}],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",23,{"inputs":[{"name":"keyboardstate"}],"output":{"name":"pressedscancodeiterator"}}],[11,"next","","",24,{"inputs":[{"name":"scancodeiterator"}],"output":{"name":"option"}}],[11,"next","","",25,{"inputs":[{"name":"pressedscancodeiterator"}],"output":{"name":"option"}}],[11,"keyboard","sdl2","",26,{"inputs":[{"name":"sdl"}],"output":{"name":"keyboardutil"}}],[11,"text_input","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"textinpututil"}}],[11,"focused_window_id","sdl2::keyboard","Gets the id of the window which currently has keyboard focus.",27,{"inputs":[{"name":"keyboardutil"}],"output":{"name":"option"}}],[11,"mod_state","","",27,{"inputs":[{"name":"keyboardutil"}],"output":{"name":"mod"}}],[11,"set_mod_state","","",27,{"inputs":[{"name":"keyboardutil"},{"name":"mod"}],"output":null}],[11,"start","","",28,{"inputs":[{"name":"textinpututil"}],"output":null}],[11,"is_active","","",28,{"inputs":[{"name":"textinpututil"}],"output":{"name":"bool"}}],[11,"stop","","",28,{"inputs":[{"name":"textinpututil"}],"output":null}],[11,"set_rect","","",28,{"inputs":[{"name":"textinpututil"},{"name":"rect"}],"output":null}],[11,"has_screen_keyboard_support","","",28,{"inputs":[{"name":"textinpututil"}],"output":{"name":"bool"}}],[11,"is_screen_keyboard_shown","","",28,{"inputs":[{"name":"textinpututil"},{"name":"window"}],"output":{"name":"bool"}}],[0,"mouse","sdl2","",null,null],[3,"Cursor","sdl2::mouse","",null,null],[3,"MouseState","","",null,null],[3,"MouseUtil","","Mouse utility functions. Access with `Sdl::mouse()`.",null,null],[4,"SystemCursor","","",null,null],[13,"Arrow","","",29,null],[13,"IBeam","","",29,null],[13,"Wait","","",29,null],[13,"Crosshair","","",29,null],[13,"WaitArrow","","",29,null],[13,"SizeNWSE","","",29,null],[13,"SizeNESW","","",29,null],[13,"SizeWE","","",29,null],[13,"SizeNS","","",29,null],[13,"SizeAll","","",29,null],[13,"No","","",29,null],[13,"Hand","","",29,null],[4,"Mouse","","",null,null],[13,"Left","","",30,null],[13,"Middle","","",30,null],[13,"Right","","",30,null],[13,"X1","","",30,null],[13,"X2","","",30,null],[13,"Unknown","","",30,null],[11,"fmt","","",29,{"inputs":[{"name":"systemcursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"eq","","",29,{"inputs":[{"name":"systemcursor"},{"name":"systemcursor"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"systemcursor"},{"name":"systemcursor"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"systemcursor"}],"output":{"name":"systemcursor"}}],[11,"drop","","",31,{"inputs":[{"name":"cursor"}],"output":null}],[11,"new","","",31,null],[11,"from_surface","","",31,{"inputs":[{"name":"cursor"},{"name":"s"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"from_system","","",31,{"inputs":[{"name":"cursor"},{"name":"systemcursor"}],"output":{"name":"sdlresult"}}],[11,"set","","",31,{"inputs":[{"name":"cursor"}],"output":null}],[11,"fmt","","",30,{"inputs":[{"name":"mouse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"eq","","",30,{"inputs":[{"name":"mouse"},{"name":"mouse"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"mouse"},{"name":"mouse"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"mouse"}],"output":{"name":"mouse"}}],[11,"from_ll","","",30,{"inputs":[{"name":"mouse"},{"name":"u8"}],"output":{"name":"mouse"}}],[11,"hash","","",32,null],[11,"eq","","",32,{"inputs":[{"name":"mousestate"},{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"mousestate"},{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"mousestate"}}],[11,"button","","Tests if a mouse button was pressed.",32,{"inputs":[{"name":"mousestate"},{"name":"mouse"}],"output":{"name":"bool"}}],[11,"left","","Tests if the left mouse button was pressed.",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"middle","","Tests if the middle mouse button was pressed.",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"right","","Tests if the right mouse button was pressed.",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"x1","","Tests if the X1 mouse button was pressed.",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"x2","","Tests if the X2 mouse button was pressed.",32,{"inputs":[{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"from_flags","","",32,{"inputs":[{"name":"mousestate"},{"name":"u32"}],"output":{"name":"mousestate"}}],[11,"mouse","sdl2","",26,{"inputs":[{"name":"sdl"}],"output":{"name":"mouseutil"}}],[11,"focused_window_id","sdl2::mouse","Gets the id of the window which currently has mouse focus.",33,{"inputs":[{"name":"mouseutil"}],"output":{"name":"option"}}],[11,"mouse_state","","",33,null],[11,"relative_mouse_state","","",33,null],[11,"warp_mouse_in_window","","",33,{"inputs":[{"name":"mouseutil"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_relative_mouse_mode","","",33,{"inputs":[{"name":"mouseutil"},{"name":"bool"}],"output":null}],[11,"relative_mouse_mode","","",33,{"inputs":[{"name":"mouseutil"}],"output":{"name":"bool"}}],[11,"is_cursor_showing","","",33,{"inputs":[{"name":"mouseutil"}],"output":{"name":"bool"}}],[11,"show_cursor","","",33,{"inputs":[{"name":"mouseutil"},{"name":"bool"}],"output":null}],[0,"rect","sdl2","",null,null],[3,"Point","sdl2::rect","Immutable point type, consisting of x and y.",null,null],[3,"Rect","","Immutable rectangle type, consisting of x, y, width and height.",null,null],[11,"hash","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"point"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"point"}],"output":{"name":"point"}}],[11,"from","","",34,null],[11,"into","","",34,null],[11,"raw","","",34,null],[11,"raw_slice","","",34,null],[11,"from_ll","","",34,{"inputs":[{"name":"point"},{"name":"sdl_point"}],"output":{"name":"point"}}],[11,"new","","",34,{"inputs":[{"name":"point"},{"name":"i32"},{"name":"i32"}],"output":{"name":"point"}}],[11,"offset","","",34,{"inputs":[{"name":"point"},{"name":"i32"},{"name":"i32"}],"output":{"name":"point"}}],[11,"xy","","",34,null],[11,"x","","",34,{"inputs":[{"name":"point"}],"output":{"name":"i32"}}],[11,"y","","",34,{"inputs":[{"name":"point"}],"output":{"name":"i32"}}],[11,"hash","","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"into","","",35,null],[11,"raw","","",35,null],[11,"raw_from_option","","",35,null],[11,"raw_mut_from_option","","",35,null],[11,"raw_slice","","",35,null],[11,"from_ll","","",35,{"inputs":[{"name":"rect"},{"name":"sdl_rect"}],"output":{"name":"sdlresult"}}],[11,"new","","Creates a new rectangle.",35,{"inputs":[{"name":"rect"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"new_unwrap","","Creates a new rectangle. Convenience function that unwraps the result of `Rect::new()` twice.",35,{"inputs":[{"name":"rect"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rect"}}],[11,"offset","","Offsets the rectangle's x and y coordinates.",35,{"inputs":[{"name":"rect"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"xywh","","",35,null],[11,"x","","",35,{"inputs":[{"name":"rect"}],"output":{"name":"i32"}}],[11,"y","","",35,{"inputs":[{"name":"rect"}],"output":{"name":"i32"}}],[11,"width","","",35,{"inputs":[{"name":"rect"}],"output":{"name":"u32"}}],[11,"height","","",35,{"inputs":[{"name":"rect"}],"output":{"name":"u32"}}],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points.",35,null],[11,"has_intersection","","Determine whether two rectangles intersect.",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"intersect","","Calculate the intersection of two rectangles. The bitwise AND operator `&` can also be used.",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"union","","Calculate the union of two rectangles. The bitwise OR operator `|` can also be used.",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"rect"}}],[11,"intersect_line","","Calculate the intersection of a rectangle and line segment. return points of intersection.",35,{"inputs":[{"name":"rect"},{"name":"point"},{"name":"point"}],"output":{"name":"option"}}],[11,"bitand","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"bitand","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"bitor","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"rect"}}],[11,"bitor","","",35,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"rect"}}],[0,"surface","sdl2","",null,null],[3,"Surface","sdl2::surface","",null,null],[3,"SurfaceRef","","An unsized Surface reference.",null,null],[11,"drop","","",36,{"inputs":[{"name":"surface"}],"output":null}],[11,"deref","","",36,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceref"}}],[11,"deref_mut","","",36,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceref"}}],[11,"as_ref","","",36,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceref"}}],[11,"as_mut","","",36,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceref"}}],[11,"from_ll","","",36,null],[11,"new","","Creates a new surface using a pixel format.",36,{"inputs":[{"name":"surface"},{"name":"u32"},{"name":"u32"},{"name":"pixelformatenum"}],"output":{"name":"sdlresult"}}],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",36,{"inputs":[{"name":"surface"},{"name":"u32"},{"name":"u32"},{"name":"pixelmasks"}],"output":{"name":"sdlresult"}}],[11,"from_data","","Creates a new surface from an existing buffer, using a pixel format.",36,null],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using pixel masks.",36,null],[11,"load_bmp_rw","","",36,{"inputs":[{"name":"surface"},{"name":"rwops"}],"output":{"name":"sdlresult"}}],[11,"load_bmp","","",36,{"inputs":[{"name":"surface"},{"name":"p"}],"output":{"name":"sdlresult"}}],[11,"from_ll","","",37,null],[11,"from_ll_mut","","",37,null],[11,"raw","","",37,null],[11,"width","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"u32"}}],[11,"height","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"u32"}}],[11,"pitch","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"u32"}}],[11,"size","","",37,null],[11,"rect","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"rect"}}],[11,"pixel_format","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"pixelformat"}}],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",37,{"inputs":[{"name":"surfaceref"},{"name":"f"}],"output":{"name":"r"}}],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly accessed safely.",37,{"inputs":[{"name":"surfaceref"},{"name":"f"}],"output":{"name":"r"}}],[11,"without_lock","","Returns the Surface's pixel buffer if the Surface doesn't require locking\n(e.g. it's a software surface).",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"option"}}],[11,"without_lock_mut","","Returns the Surface's pixel buffer if the Surface doesn't require locking\n(e.g. it's a software surface).",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"option"}}],[11,"must_lock","","Returns true if the Surface needs to be locked before accessing the Surface pixels.",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"bool"}}],[11,"save_bmp_rw","","",37,{"inputs":[{"name":"surfaceref"},{"name":"rwops"}],"output":{"name":"sdlresult"}}],[11,"save_bmp","","",37,{"inputs":[{"name":"surfaceref"},{"name":"p"}],"output":{"name":"sdlresult"}}],[11,"set_palette","","",37,{"inputs":[{"name":"surfaceref"},{"name":"palette"}],"output":{"name":"sdlresult"}}],[11,"enable_RLE","","",37,{"inputs":[{"name":"surfaceref"}],"output":null}],[11,"disable_RLE","","",37,{"inputs":[{"name":"surfaceref"}],"output":null}],[11,"set_color_key","","",37,{"inputs":[{"name":"surfaceref"},{"name":"bool"},{"name":"color"}],"output":{"name":"sdlresult"}}],[11,"color_key","","The function will fail if the surface doesn't have color key enabled.",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"sdlresult"}}],[11,"set_color_mod","","",37,{"inputs":[{"name":"surfaceref"},{"name":"color"}],"output":null}],[11,"color_mod","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"color"}}],[11,"fill_rect","","",37,{"inputs":[{"name":"surfaceref"},{"name":"option"},{"name":"color"}],"output":{"name":"sdlresult"}}],[11,"fill_rects","","",37,null],[11,"set_alpha_mod","","",37,{"inputs":[{"name":"surfaceref"},{"name":"u8"}],"output":null}],[11,"alpha_mod","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"u8"}}],[11,"set_blend_mode","","The function will fail if the blend mode is not supported by SDL.",37,{"inputs":[{"name":"surfaceref"},{"name":"blendmode"}],"output":{"name":"sdlresult"}}],[11,"blend_mode","","",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"blendmode"}}],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",37,{"inputs":[{"name":"surfaceref"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clip_rect","","Gets the clip rectangle for the surface.",37,{"inputs":[{"name":"surfaceref"}],"output":{"name":"option"}}],[11,"convert","","Copies the surface into a new one that is optimized for blitting to a surface of a specified pixel format.",37,{"inputs":[{"name":"surfaceref"},{"name":"pixelformat"}],"output":{"name":"sdlresult"}}],[11,"blit","","Performs surface blitting (surface copying).",37,{"inputs":[{"name":"surfaceref"},{"name":"option"},{"name":"s"},{"name":"option"}],"output":{"name":"sdlresult"}}],[11,"lower_blit","","Performs low-level surface blitting.",37,{"inputs":[{"name":"surfaceref"},{"name":"option"},{"name":"s"},{"name":"option"}],"output":{"name":"sdlresult"}}],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",37,{"inputs":[{"name":"surfaceref"},{"name":"option"},{"name":"s"},{"name":"option"}],"output":{"name":"sdlresult"}}],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",37,{"inputs":[{"name":"surfaceref"},{"name":"option"},{"name":"s"},{"name":"option"}],"output":{"name":"sdlresult"}}],[0,"pixels","sdl2","",null,null],[3,"Palette","sdl2::pixels","",null,null],[3,"PixelMasks","","",null,null],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",38,null],[12,"rmask","","The red mask",38,null],[12,"gmask","","The green mask",38,null],[12,"bmask","","The blue mask",38,null],[12,"amask","","The alpha mask",38,null],[3,"PixelFormat","","",null,null],[4,"Color","","",null,null],[13,"RGB","","",39,null],[13,"RGBA","","",39,null],[4,"PixelFormatEnum","","",null,null],[13,"Unknown","","",40,null],[13,"Index1LSB","","",40,null],[13,"Index1MSB","","",40,null],[13,"Index4LSB","","",40,null],[13,"Index4MSB","","",40,null],[13,"Index8","","",40,null],[13,"RGB332","","",40,null],[13,"RGB444","","",40,null],[13,"RGB555","","",40,null],[13,"BGR555","","",40,null],[13,"ARGB4444","","",40,null],[13,"RGBA4444","","",40,null],[13,"ABGR4444","","",40,null],[13,"BGRA4444","","",40,null],[13,"ARGB1555","","",40,null],[13,"RGBA5551","","",40,null],[13,"ABGR1555","","",40,null],[13,"BGRA5551","","",40,null],[13,"RGB565","","",40,null],[13,"BGR565","","",40,null],[13,"RGB24","","",40,null],[13,"BGR24","","",40,null],[13,"RGB888","","",40,null],[13,"RGBX8888","","",40,null],[13,"BGR888","","",40,null],[13,"BGRX8888","","",40,null],[13,"ARGB8888","","",40,null],[13,"RGBA8888","","",40,null],[13,"ABGR8888","","",40,null],[13,"BGRA8888","","",40,null],[13,"ARGB2101010","","",40,null],[13,"YV12","","",40,null],[13,"IYUV","","",40,null],[13,"YUY2","","",40,null],[13,"UYVY","","",40,null],[13,"YVYU","","",40,null],[11,"raw","","",41,null],[11,"fmt","","",39,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"eq","","",39,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"to_u32","","",39,{"inputs":[{"name":"color"},{"name":"pixelformat"}],"output":{"name":"u32"}}],[11,"from_u32","","",39,{"inputs":[{"name":"color"},{"name":"pixelformat"},{"name":"u32"}],"output":{"name":"color"}}],[11,"rgb","","",39,null],[11,"rand","","",39,{"inputs":[{"name":"color"},{"name":"r"}],"output":{"name":"color"}}],[11,"raw","","",42,null],[11,"from_ll","","",42,null],[11,"fmt","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",40,null],[11,"eq","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"pixelformatenum"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"pixelformatenum"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"pixelformatenum"}],"output":{"name":"pixelformatenum"}}],[11,"from_masks","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"pixelmasks"}],"output":{"name":"pixelformatenum"}}],[11,"into_masks","","",40,{"inputs":[{"name":"pixelformatenum"}],"output":{"name":"sdlresult"}}],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given its pitch\nand height.",40,{"inputs":[{"name":"pixelformatenum"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"byte_size_of_pixels","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"byte_size_per_pixel","","",40,{"inputs":[{"name":"pixelformatenum"}],"output":{"name":"usize"}}],[11,"from_i64","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",40,{"inputs":[{"name":"pixelformatenum"},{"name":"u64"}],"output":{"name":"option"}}],[0,"video","sdl2","",null,null],[3,"DisplayMode","sdl2::video","",null,null],[12,"format","","",43,null],[12,"w","","",43,null],[12,"h","","",43,null],[12,"refresh_rate","","",43,null],[3,"GLContext","","",null,null],[3,"Window","","",null,null],[3,"WindowRef","","An unsized Window reference.",null,null],[3,"WindowBuilder","","The type that allows you to build windows.",null,null],[3,"DriverIterator","","",null,null],[4,"GLProfile","","",null,null],[13,"Core","","OpenGL core profile - deprecated functions are disabled",44,null],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are allowed",44,null],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL functionality is available",44,null],[4,"FullscreenType","","",null,null],[13,"Off","","",45,null],[13,"True","","",45,null],[13,"Desktop","","",45,null],[4,"WindowPos","","",null,null],[13,"Undefined","","",46,null],[13,"Centered","","",46,null],[13,"Positioned","","",46,null],[5,"drivers","","Gets an iterator of all video drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[0,"gl_attr","","OpenGL context getters and setters",null,null],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with `VideoSubsystem::gl_attr()`.",null,null],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context configuration.",null,null],[3,"ContextFlags","","",null,null],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"glattr"}}],[11,"set_red_size","sdl2::video::gl_attr","**Sets** the attribute:\nthe minimum number of bits for the red channel of the color buffer; defaults to 3",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"red_size","","**Gets** the attribute:\nthe minimum number of bits for the red channel of the color buffer; defaults to 3",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_green_size","","**Sets** the attribute:\nthe minimum number of bits for the green channel of the color buffer; defaults to 3",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"green_size","","**Gets** the attribute:\nthe minimum number of bits for the green channel of the color buffer; defaults to 3",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_blue_size","","**Sets** the attribute:\nthe minimum number of bits for the blue channel of the color buffer; defaults to 2",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"blue_size","","**Gets** the attribute:\nthe minimum number of bits for the blue channel of the color buffer; defaults to 2",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_alpha_size","","**Sets** the attribute:\nthe minimum number of bits for the alpha channel of the color buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"alpha_size","","**Gets** the attribute:\nthe minimum number of bits for the alpha channel of the color buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_buffer_size","","**Sets** the attribute:\nthe minimum number of bits for frame buffer size; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"buffer_size","","**Gets** the attribute:\nthe minimum number of bits for frame buffer size; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_double_buffer","","**Sets** the attribute:\nwhether the output is single or double buffered; defaults to double buffering on",47,{"inputs":[{"name":"glattr"},{"name":"bool"}],"output":null}],[11,"double_buffer","","**Gets** the attribute:\nwhether the output is single or double buffered; defaults to double buffering on",47,{"inputs":[{"name":"glattr"}],"output":{"name":"bool"}}],[11,"set_depth_size","","**Sets** the attribute:\nthe minimum number of bits in the depth buffer; defaults to 16",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"depth_size","","**Gets** the attribute:\nthe minimum number of bits in the depth buffer; defaults to 16",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_stencil_size","","**Sets** the attribute:\nthe minimum number of bits in the stencil buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"stencil_size","","**Gets** the attribute:\nthe minimum number of bits in the stencil buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_accum_red_size","","**Sets** the attribute:\nthe minimum number of bits for the red channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"accum_red_size","","**Gets** the attribute:\nthe minimum number of bits for the red channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_accum_green_size","","**Sets** the attribute:\nthe minimum number of bits for the green channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"accum_green_size","","**Gets** the attribute:\nthe minimum number of bits for the green channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_accum_blue_size","","**Sets** the attribute:\nthe minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"accum_blue_size","","**Gets** the attribute:\nthe minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_accum_alpha_size","","**Sets** the attribute:\nthe minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"accum_alpha_size","","**Gets** the attribute:\nthe minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_stereo","","**Sets** the attribute:\nwhether the output is stereo 3D; defaults to off",47,{"inputs":[{"name":"glattr"},{"name":"bool"}],"output":null}],[11,"stereo","","**Gets** the attribute:\nwhether the output is stereo 3D; defaults to off",47,{"inputs":[{"name":"glattr"}],"output":{"name":"bool"}}],[11,"set_multisample_buffers","","**Sets** the attribute:\nthe number of buffers used for multisample anti-aliasing; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"multisample_buffers","","**Gets** the attribute:\nthe number of buffers used for multisample anti-aliasing; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_multisample_samples","","**Sets** the attribute:\nthe number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"multisample_samples","","**Gets** the attribute:\nthe number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_accelerated_visual","","**Sets** the attribute:\nwhether to require hardware acceleration; false to force software rendering; defaults to allow either",47,{"inputs":[{"name":"glattr"},{"name":"bool"}],"output":null}],[11,"accelerated_visual","","**Gets** the attribute:\nwhether to require hardware acceleration; false to force software rendering; defaults to allow either",47,{"inputs":[{"name":"glattr"}],"output":{"name":"bool"}}],[11,"set_context_major_version","","**Sets** the attribute:\nOpenGL context major version",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"context_major_version","","**Gets** the attribute:\nOpenGL context major version",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_context_minor_version","","**Sets** the attribute:\nOpenGL context minor version",47,{"inputs":[{"name":"glattr"},{"name":"u8"}],"output":null}],[11,"context_minor_version","","**Gets** the attribute:\nOpenGL context minor version",47,{"inputs":[{"name":"glattr"}],"output":{"name":"u8"}}],[11,"set_context_profile","","**Sets** the attribute:\ntype of GL context (Core, Compatibility, ES)",47,{"inputs":[{"name":"glattr"},{"name":"glprofile"}],"output":null}],[11,"context_profile","","**Gets** the attribute:\ntype of GL context (Core, Compatibility, ES)",47,{"inputs":[{"name":"glattr"}],"output":{"name":"glprofile"}}],[11,"set_share_with_current_context","","**Sets** the attribute:\nOpenGL context sharing; defaults to false",47,{"inputs":[{"name":"glattr"},{"name":"bool"}],"output":null}],[11,"share_with_current_context","","**Gets** the attribute:\nOpenGL context sharing; defaults to false",47,{"inputs":[{"name":"glattr"}],"output":{"name":"bool"}}],[11,"set_framebuffer_srgb_compatible","","**Sets** the attribute:\nrequests sRGB capable visual; defaults to false (>= SDL 2.0.1)",47,{"inputs":[{"name":"glattr"},{"name":"bool"}],"output":null}],[11,"framebuffer_srgb_compatible","","**Gets** the attribute:\nrequests sRGB capable visual; defaults to false (>= SDL 2.0.1)",47,{"inputs":[{"name":"glattr"}],"output":{"name":"bool"}}],[11,"set_context_version","","**Sets** the OpenGL context major and minor versions.",47,{"inputs":[{"name":"glattr"},{"name":"u8"},{"name":"u8"}],"output":null}],[11,"context_version","","**Gets** the OpenGL context major and minor versions as a tuple.",47,null],[11,"set","","Finishes the builder and applies the GL context flags to the GL context.",48,{"inputs":[{"name":"contextflagsbuilder"}],"output":null}],[11,"debug","","Sets the context into \"debug\" mode.",48,{"inputs":[{"name":"contextflagsbuilder"}],"output":{"name":"contextflagsbuilder"}}],[11,"forward_compatible","","Sets the context into \"forward compatible\" mode.",48,{"inputs":[{"name":"contextflagsbuilder"}],"output":{"name":"contextflagsbuilder"}}],[11,"robust_access","","",48,{"inputs":[{"name":"contextflagsbuilder"}],"output":{"name":"contextflagsbuilder"}}],[11,"reset_isolation","","",48,{"inputs":[{"name":"contextflagsbuilder"}],"output":{"name":"contextflagsbuilder"}}],[11,"has_debug","","",49,{"inputs":[{"name":"contextflags"}],"output":{"name":"bool"}}],[11,"has_forward_compatible","","",49,{"inputs":[{"name":"contextflags"}],"output":{"name":"bool"}}],[11,"has_robust_access","","",49,{"inputs":[{"name":"contextflags"}],"output":{"name":"bool"}}],[11,"has_reset_isolation","","",49,{"inputs":[{"name":"contextflags"}],"output":{"name":"bool"}}],[11,"set_context_flags","","**Sets** any combination of OpenGL context configuration flags.",47,{"inputs":[{"name":"glattr"}],"output":{"name":"contextflagsbuilder"}}],[11,"context_flags","","**Gets** the applied OpenGL context configuration flags.",47,{"inputs":[{"name":"glattr"}],"output":{"name":"contextflags"}}],[11,"fmt","sdl2::video","",44,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"eq","","",44,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",43,{"inputs":[{"name":"displaymode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"eq","","",43,{"inputs":[{"name":"displaymode"},{"name":"displaymode"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"displaymode"},{"name":"displaymode"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"displaymode"}],"output":{"name":"displaymode"}}],[11,"new","","",43,{"inputs":[{"name":"displaymode"},{"name":"u32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"displaymode"}}],[11,"from_ll","","",43,{"inputs":[{"name":"displaymode"},{"name":"sdl_displaymode"}],"output":{"name":"displaymode"}}],[11,"to_ll","","",43,{"inputs":[{"name":"displaymode"}],"output":{"name":"sdl_displaymode"}}],[11,"fmt","","",45,{"inputs":[{"name":"fullscreentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"eq","","",45,{"inputs":[{"name":"fullscreentype"},{"name":"fullscreentype"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"fullscreentype"},{"name":"fullscreentype"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"fullscreentype"}],"output":{"name":"fullscreentype"}}],[11,"fmt","","",46,{"inputs":[{"name":"windowpos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"eq","","",46,{"inputs":[{"name":"windowpos"},{"name":"windowpos"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"windowpos"},{"name":"windowpos"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"windowpos"}],"output":{"name":"windowpos"}}],[11,"drop","","",50,{"inputs":[{"name":"glcontext"}],"output":null}],[11,"is_current","","Returns true if the OpenGL context is the current one in the thread.",50,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[11,"raw","","",50,{"inputs":[{"name":"glcontext"}],"output":{"name":"sdl_glcontext"}}],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method that calls `WindowBuilder::new()`.",1,{"inputs":[{"name":"videosubsystem"},{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"current_video_driver","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"str"}}],[11,"num_video_displays","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"sdlresult"}}],[11,"display_name","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"string"}}],[11,"display_bounds","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"num_display_modes","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"display_mode","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"desktop_display_mode","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"current_display_mode","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"closest_display_mode","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"},{"name":"displaymode"}],"output":{"name":"sdlresult"}}],[11,"is_screen_saver_enabled","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"bool"}}],[11,"enable_screen_saver","","",1,{"inputs":[{"name":"videosubsystem"}],"output":null}],[11,"disable_screen_saver","","",1,{"inputs":[{"name":"videosubsystem"}],"output":null}],[11,"gl_load_library_default","","Loads the default OpenGL library.",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"sdlresult"}}],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent OpenGL library name (usually a file path).",1,{"inputs":[{"name":"videosubsystem"},{"name":"p"}],"output":{"name":"sdlresult"}}],[11,"gl_unload_library","","Unloads the current OpenGL library.",1,{"inputs":[{"name":"videosubsystem"}],"output":null}],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",1,null],[11,"gl_extension_supported","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"str"}],"output":{"name":"bool"}}],[11,"gl_get_current_window_id","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"sdlresult"}}],[11,"gl_release_current_context","","Releases the thread's current OpenGL context, i.e. sets the current OpenGL context to nothing.",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"sdlresult"}}],[11,"gl_set_swap_interval","","",1,{"inputs":[{"name":"videosubsystem"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"gl_get_swap_interval","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"i32"}}],[11,"drop","sdl2::video","",51,{"inputs":[{"name":"window"}],"output":null}],[11,"new","","Initializes a new `WindowBuilder`.",52,{"inputs":[{"name":"windowbuilder"},{"name":"videosubsystem"},{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"sdlresult"}}],[11,"window_flags","","Gets the underlying window flags.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"u32"}}],[11,"set_window_flags","","Sets the underlying window flags.\nThis will effectively undo any previous build operations, excluding window size and position.",52,{"inputs":[{"name":"windowbuilder"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"position","","Sets the window position.",52,{"inputs":[{"name":"windowbuilder"},{"name":"i32"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[11,"position_centered","","Centers the window.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"fullscreen","","Sets the window to fullscreen.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop resolution.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"opengl","","Sets the window to be usable with an OpenGL context",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"hidden","","Hides the window.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"borderless","","Removes the window decoration.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"resizable","","Sets the window to be resizable.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"minimized","","Minimizes the window.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"maximized","","Maximizes the window.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"input_grabbed","","Sets the window to have grabbed input focus.",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (>= SDL 2.0.1)",52,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"raw","","",51,null],[11,"from_ll","","",51,null],[11,"subsystem","","",51,{"inputs":[{"name":"window"}],"output":{"name":"videosubsystem"}}],[11,"renderer","","Initializes a new `RendererBuilder`; a convenience method that calls `RendererBuilder::new()`.",51,{"inputs":[{"name":"window"}],"output":{"name":"rendererbuilder"}}],[11,"deref","","",51,{"inputs":[{"name":"window"}],"output":{"name":"windowref"}}],[11,"deref_mut","","",51,{"inputs":[{"name":"window"}],"output":{"name":"windowref"}}],[11,"raw","","",53,null],[11,"from_ll","","",53,null],[11,"from_ll_mut","","",53,null],[11,"id","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"u32"}}],[11,"gl_create_context","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"gl_set_context_to_current","","Set the window's OpenGL context to the current context on the thread.",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"gl_make_current","","",53,{"inputs":[{"name":"windowref"},{"name":"glcontext"}],"output":{"name":"sdlresult"}}],[11,"gl_swap_window","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"display_index","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"set_display_mode","","",53,{"inputs":[{"name":"windowref"},{"name":"option"}],"output":{"name":"sdlresult"}}],[11,"display_mode","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"window_pixel_format","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"pixelformatenum"}}],[11,"window_flags","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"u32"}}],[11,"set_title","","",53,{"inputs":[{"name":"windowref"},{"name":"str"}],"output":null}],[11,"title","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"str"}}],[11,"set_icon","","",53,{"inputs":[{"name":"windowref"},{"name":"s"}],"output":null}],[11,"set_position","","",53,{"inputs":[{"name":"windowref"},{"name":"windowpos"},{"name":"windowpos"}],"output":null}],[11,"position","","",53,null],[11,"set_size","","",53,{"inputs":[{"name":"windowref"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"size","","",53,null],[11,"drawable_size","","",53,null],[11,"set_minimum_size","","",53,{"inputs":[{"name":"windowref"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"minimum_size","","",53,null],[11,"set_maximum_size","","",53,{"inputs":[{"name":"windowref"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"maximum_size","","",53,null],[11,"set_bordered","","",53,{"inputs":[{"name":"windowref"},{"name":"bool"}],"output":null}],[11,"show","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"hide","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"raise","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"maximize","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"minimize","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"restore","","",53,{"inputs":[{"name":"windowref"}],"output":null}],[11,"set_fullscreen","","",53,{"inputs":[{"name":"windowref"},{"name":"fullscreentype"}],"output":{"name":"sdlresult"}}],[11,"surface","","",53,{"inputs":[{"name":"windowref"},{"name":"eventpump"}],"output":{"name":"sdlresult"}}],[11,"surface_mut","","",53,{"inputs":[{"name":"windowref"},{"name":"eventpump"}],"output":{"name":"sdlresult"}}],[11,"update_surface","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"update_surface_rects","","",53,null],[11,"set_grab","","",53,{"inputs":[{"name":"windowref"},{"name":"bool"}],"output":null}],[11,"grab","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"bool"}}],[11,"set_brightness","","",53,{"inputs":[{"name":"windowref"},{"name":"f64"}],"output":{"name":"sdlresult"}}],[11,"brightness","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"f64"}}],[11,"set_gamma_ramp","","",53,{"inputs":[{"name":"windowref"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"sdlresult"}}],[11,"gamma_ramp","","",53,{"inputs":[{"name":"windowref"}],"output":{"name":"sdlresult"}}],[11,"clone","","",54,{"inputs":[{"name":"driveriterator"}],"output":{"name":"driveriterator"}}],[11,"next","","",54,{"inputs":[{"name":"driveriterator"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[0,"timer","sdl2","",null,null],[3,"Timer","sdl2::timer","",null,null],[6,"TimerCallback","","",null,null],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",55,{"inputs":[{"name":"timersubsystem"},{"name":"u32"},{"name":"timercallback"}],"output":{"name":"timer"}}],[11,"ticks","","Gets the number of milliseconds elapsed since the timer subsystem was initialized.",55,{"inputs":[{"name":"timersubsystem"}],"output":{"name":"u32"}}],[11,"delay","","Sleeps the current thread for the specified amount of milliseconds.",55,{"inputs":[{"name":"timersubsystem"},{"name":"u32"}],"output":null}],[11,"performance_counter","","",55,{"inputs":[{"name":"timersubsystem"}],"output":{"name":"u64"}}],[11,"performance_frequency","","",55,{"inputs":[{"name":"timersubsystem"}],"output":{"name":"u64"}}],[11,"into_inner","sdl2::timer","Returns the closure as a trait-object and cancels the timer\nby consuming it...",56,{"inputs":[{"name":"timer"}],"output":{"name":"timercallback"}}],[11,"drop","","",56,{"inputs":[{"name":"timer"}],"output":null}],[0,"render","sdl2","2D accelerated rendering",null,null],[3,"RendererInfo","sdl2::render","A structure that contains information on the capabilities of a render driver\nor the current render context.",null,null],[12,"name","","",57,null],[12,"flags","","",57,null],[12,"texture_formats","","",57,null],[12,"max_texture_width","","",57,null],[12,"max_texture_height","","",57,null],[3,"Renderer","","2D rendering context",null,null],[3,"RendererBuilder","","The type that allows you to build Window-based renderers.",null,null],[3,"RenderTarget","","A handle for getting/setting the render target of the render context.",null,null],[3,"TextureQuery","","",null,null],[12,"format","","",58,null],[12,"access","","",58,null],[12,"width","","",58,null],[12,"height","","",58,null],[3,"Texture","","A texture for a rendering context.",null,null],[3,"DriverIterator","","",null,null],[4,"TextureAccess","","",null,null],[13,"Static","","",59,null],[13,"Streaming","","",59,null],[13,"Target","","",59,null],[4,"BlendMode","","",null,null],[13,"None","","",60,null],[13,"Blend","","",60,null],[13,"Add","","",60,null],[13,"Mod","","",60,null],[4,"RendererParent","","",null,null],[13,"Surface","","",61,null],[13,"Window","","",61,null],[5,"drivers","","Gets an iterator of all render drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[11,"fmt","","",59,{"inputs":[{"name":"textureaccess"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",59,null],[11,"eq","","",59,{"inputs":[{"name":"textureaccess"},{"name":"textureaccess"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"textureaccess"},{"name":"textureaccess"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"textureaccess"}],"output":{"name":"textureaccess"}}],[11,"from_i64","","",59,{"inputs":[{"name":"textureaccess"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",59,{"inputs":[{"name":"textureaccess"},{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",57,{"inputs":[{"name":"rendererinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"eq","","",57,{"inputs":[{"name":"rendererinfo"},{"name":"rendererinfo"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"rendererinfo"},{"name":"rendererinfo"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"rendererinfo"}],"output":{"name":"rendererinfo"}}],[11,"fmt","","",60,{"inputs":[{"name":"blendmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",60,null],[11,"eq","","",60,{"inputs":[{"name":"blendmode"},{"name":"blendmode"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"blendmode"},{"name":"blendmode"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"blendmode"}],"output":{"name":"blendmode"}}],[11,"from_i64","","",60,{"inputs":[{"name":"blendmode"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",60,{"inputs":[{"name":"blendmode"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_ll","","",57,{"inputs":[{"name":"rendererinfo"},{"name":"sdl_rendererinfo"}],"output":{"name":"rendererinfo"}}],[11,"drop","","",62,{"inputs":[{"name":"renderer"}],"output":null}],[11,"new","","Initializes a new `RendererBuilder`.",63,{"inputs":[{"name":"rendererbuilder"},{"name":"window"}],"output":{"name":"rendererbuilder"}}],[11,"build","","Builds the renderer.",63,{"inputs":[{"name":"rendererbuilder"}],"output":{"name":"sdlresult"}}],[11,"index","","Sets the index of the rendering driver to initialize.",63,{"inputs":[{"name":"rendererbuilder"},{"name":"u32"}],"output":{"name":"rendererbuilder"}}],[11,"software","","Set the renderer to a software fallback.",63,{"inputs":[{"name":"rendererbuilder"}],"output":{"name":"rendererbuilder"}}],[11,"accelerated","","Set the renderer to use hardware acceleration.",63,{"inputs":[{"name":"rendererbuilder"}],"output":{"name":"rendererbuilder"}}],[11,"present_vsync","","Synchronize renderer present with the refresh rate.",63,{"inputs":[{"name":"rendererbuilder"}],"output":{"name":"rendererbuilder"}}],[11,"target_texture","","Set the renderer to support rendering to a texture.",63,{"inputs":[{"name":"rendererbuilder"}],"output":{"name":"rendererbuilder"}}],[11,"from_surface","","Creates a 2D software rendering context for a surface.",62,{"inputs":[{"name":"renderer"},{"name":"surface"}],"output":{"name":"sdlresult"}}],[11,"info","","Gets information about the rendering context.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"rendererinfo"}}],[11,"window","","Gets the associated window reference of the Renderer, if there is one.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"window_mut","","Gets the associated window reference of the Renderer, if there is one.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"surface","","Gets the associated surface reference of the Renderer, if there is one.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"surface_mut","","Gets the associated surface reference of the Renderer, if there is one.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"into_window","","",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"into_surface","","",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"raw","","Unwraps the window or surface the rendering context was created from.",62,null],[11,"from_ll","","",62,null],[11,"create_texture","","Creates a texture for a rendering context.",62,null],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, size)`",62,null],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, size)`",62,null],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, size)`",62,null],[11,"create_texture_from_surface","","Creates a texture from an existing surface.\n# Remarks\nThe access hint for the created texture is `TextureAccess::Static`.",62,{"inputs":[{"name":"renderer"},{"name":"s"}],"output":{"name":"sdlresult"}}],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"bool"}}],[11,"render_target","","Gets the render target handle.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",62,{"inputs":[{"name":"renderer"},{"name":"color"}],"output":null}],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",62,{"inputs":[{"name":"renderer"}],"output":{"name":"color"}}],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",62,{"inputs":[{"name":"renderer"},{"name":"blendmode"}],"output":null}],[11,"blend_mode","","Gets the blend mode used for drawing operations.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"blendmode"}}],[11,"clear","","Clears the current rendering target with the drawing color.",62,{"inputs":[{"name":"renderer"}],"output":null}],[11,"present","","Updates the screen with any rendering performed since the previous call.",62,{"inputs":[{"name":"renderer"}],"output":null}],[11,"output_size","","Gets the output size of a rendering context.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"sdlresult"}}],[11,"set_logical_size","","Sets a device independent resolution for rendering.",62,{"inputs":[{"name":"renderer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"logical_size","","Gets device independent resolution for rendering.",62,null],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",62,{"inputs":[{"name":"renderer"},{"name":"option"}],"output":null}],[11,"viewport","","Gets the drawing area for the current target.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"rect"}}],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",62,{"inputs":[{"name":"renderer"},{"name":"option"}],"output":null}],[11,"clip_rect","","Gets the clip rectangle for the current target.",62,{"inputs":[{"name":"renderer"}],"output":{"name":"option"}}],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",62,{"inputs":[{"name":"renderer"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"scale","","Gets the drawing scale for the current target.",62,null],[11,"draw_point","","Draws a point on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,{"inputs":[{"name":"renderer"},{"name":"point"}],"output":null}],[11,"draw_points","","Draws multiple points on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,null],[11,"draw_line","","# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,{"inputs":[{"name":"renderer"},{"name":"point"},{"name":"point"}],"output":null}],[11,"draw_lines","","Draws a series of connected lines on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,null],[11,"draw_rect","","Draws a rectangle on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,{"inputs":[{"name":"renderer"},{"name":"rect"}],"output":null}],[11,"draw_rects","","Draws some number of rectangles on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,null],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing\ncolor.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,{"inputs":[{"name":"renderer"},{"name":"rect"}],"output":null}],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with\nthe drawing color.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",62,null],[11,"copy","","Copies a portion of the texture to the current rendering target.",62,{"inputs":[{"name":"renderer"},{"name":"texture"},{"name":"option"},{"name":"option"}],"output":null}],[11,"copy_ex","","Copies a portion of the texture to the current rendering target,\noptionally rotating it by angle around the given center and also\nflipping it top-bottom and/or left-right.",62,null],[11,"read_pixels","","Reads pixels from the current rendering target.\n# Remarks\nWARNING: This is a very slow operation, and should not be used frequently.",62,{"inputs":[{"name":"renderer"},{"name":"option"},{"name":"pixelformatenum"}],"output":{"name":"sdlresult"}}],[11,"reset","","Resets the render target to the default render target.",64,{"inputs":[{"name":"rendertarget"}],"output":{"name":"sdlresult"}}],[11,"set","","Sets the render target to the provided texture.\nThe texture must be created with the texture access: `sdl2::render::TextureAccess::Target`.",64,{"inputs":[{"name":"rendertarget"},{"name":"texture"}],"output":{"name":"sdlresult"}}],[11,"create_and_set","","Creates a new texture and sets it as the render target.",64,null],[11,"fmt","","",58,{"inputs":[{"name":"texturequery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"texturequery"},{"name":"texturequery"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"texturequery"},{"name":"texturequery"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"texturequery"}],"output":{"name":"texturequery"}}],[11,"drop","","",65,{"inputs":[{"name":"texture"}],"output":null}],[11,"query","","Queries the attributes of the texture.",65,{"inputs":[{"name":"texture"}],"output":{"name":"texturequery"}}],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",65,{"inputs":[{"name":"texture"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":null}],[11,"color_mod","","Gets the additional color value multiplied into render copy operations.",65,null],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",65,{"inputs":[{"name":"texture"},{"name":"u8"}],"output":null}],[11,"alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",65,{"inputs":[{"name":"texture"}],"output":{"name":"u8"}}],[11,"set_blend_mode","","Sets the blend mode for a texture, used by `Renderer::copy()`.",65,{"inputs":[{"name":"texture"},{"name":"blendmode"}],"output":null}],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",65,{"inputs":[{"name":"texture"}],"output":{"name":"blendmode"}}],[11,"update","","Updates the given texture rectangle with new pixel data.",65,null],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture with new pixel data.",65,null],[11,"with_lock","","Locks the texture for **write-only** pixel access.\nThe texture must have been created with streaming access.",65,{"inputs":[{"name":"texture"},{"name":"option"},{"name":"f"}],"output":{"name":"sdlresult"}}],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current\ncontext for use with when rendering OpenGL primitives directly.",65,null],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",65,{"inputs":[{"name":"texture"}],"output":null}],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",65,{"inputs":[{"name":"texture"},{"name":"f"}],"output":{"name":"r"}}],[11,"from_ll","","",65,null],[11,"raw","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"driveriterator"}],"output":{"name":"driveriterator"}}],[11,"next","","",66,{"inputs":[{"name":"driveriterator"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[0,"rwops","sdl2","",null,null],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream I/O.",null,null],[11,"raw","","",67,null],[11,"from_ll","","",67,null],[11,"from_file","","Creates an SDL file stream.",67,{"inputs":[{"name":"rwops"},{"name":"p"},{"name":"str"}],"output":{"name":"sdlresult"}}],[11,"from_bytes","","Prepares a read-only memory buffer for use with `RWops`.",67,null],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with `RWops`.",67,null],[11,"len","","Gets the stream's total size in bytes.",67,{"inputs":[{"name":"rwops"}],"output":{"name":"option"}}],[11,"drop","","",67,{"inputs":[{"name":"rwops"}],"output":null}],[11,"read","","",67,null],[11,"write","","",67,null],[11,"flush","","",67,{"inputs":[{"name":"rwops"}],"output":{"name":"result"}}],[11,"seek","","",67,{"inputs":[{"name":"rwops"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","sdl2","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",68,{"inputs":[{"name":"errormessage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",68,null],[11,"eq","","",68,{"inputs":[{"name":"errormessage"},{"name":"errormessage"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"errormessage"},{"name":"errormessage"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"errormessage"}],"output":{"name":"errormessage"}}],[11,"fmt","","",68,{"inputs":[{"name":"errormessage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",68,{"inputs":[{"name":"errormessage"}],"output":{"name":"str"}}],[11,"from","","",68,{"inputs":[{"name":"errormessage"},{"name":"string"}],"output":{"name":"self"}}],[11,"clone","","",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdl"}}],[11,"audio","","Initializes the audio subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"event","","Initializes the event subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"joystick","","Initializes the joystick subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"haptic","","Initializes the haptic subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"game_controller","","Initializes the game controller subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"timer","","Initializes the timer subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"video","","Initializes the video subsystem.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"event_pump","","Obtains the SDL event pump.",26,{"inputs":[{"name":"sdl"}],"output":{"name":"sdlresult"}}],[11,"clone","","",69,{"inputs":[{"name":"audiosubsystem"}],"output":{"name":"audiosubsystem"}}],[11,"sdl","","Obtain an SDL context.",69,{"inputs":[{"name":"audiosubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",18,{"inputs":[{"name":"gamecontrollersubsystem"}],"output":{"name":"gamecontrollersubsystem"}}],[11,"sdl","","Obtain an SDL context.",18,{"inputs":[{"name":"gamecontrollersubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",70,{"inputs":[{"name":"hapticsubsystem"}],"output":{"name":"hapticsubsystem"}}],[11,"sdl","","Obtain an SDL context.",70,{"inputs":[{"name":"hapticsubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",12,{"inputs":[{"name":"joysticksubsystem"}],"output":{"name":"joysticksubsystem"}}],[11,"sdl","","Obtain an SDL context.",12,{"inputs":[{"name":"joysticksubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"videosubsystem"}}],[11,"sdl","","Obtain an SDL context.",1,{"inputs":[{"name":"videosubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",55,{"inputs":[{"name":"timersubsystem"}],"output":{"name":"timersubsystem"}}],[11,"sdl","","Obtain an SDL context.",55,{"inputs":[{"name":"timersubsystem"}],"output":{"name":"sdl"}}],[11,"clone","","",6,{"inputs":[{"name":"eventsubsystem"}],"output":{"name":"eventsubsystem"}}],[11,"sdl","","Obtain an SDL context.",6,{"inputs":[{"name":"eventsubsystem"}],"output":{"name":"sdl"}}],[11,"drop","","",7,{"inputs":[{"name":"eventpump"}],"output":null}],[0,"audio","","Audio Functions",null,null],[3,"DriverIterator","sdl2::audio","",null,null],[3,"AudioSpecWAV","","",null,null],[12,"freq","","",71,null],[12,"format","","",71,null],[12,"channels","","",71,null],[3,"AudioSpecDesired","","",null,null],[12,"freq","","DSP frequency (samples per second). Set to None for the device's fallback frequency.",72,null],[12,"channels","","Number of separate audio channels. Set to None for the device's fallback number of channels.",72,null],[12,"samples","","Audio buffer size in samples (power of 2). Set to None for the device's fallback sample size.",72,null],[3,"AudioSpec","","",null,null],[12,"freq","","",73,null],[12,"format","","",73,null],[12,"channels","","",73,null],[12,"silence","","",73,null],[12,"samples","","",73,null],[12,"size","","",73,null],[3,"AudioDevice","","Wraps SDL_AudioDeviceID and owns the callback data used by the audio device.",null,null],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`.",null,null],[3,"AudioCVT","","",null,null],[4,"AudioFormat","","",null,null],[13,"U8","","Unsigned 8-bit samples",74,null],[13,"S8","","Signed 8-bit samples",74,null],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",74,null],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",74,null],[13,"S16LSB","","Signed 16-bit samples, little-endian",74,null],[13,"S16MSB","","Signed 16-bit samples, big-endian",74,null],[13,"S32LSB","","Signed 32-bit samples, little-endian",74,null],[13,"S32MSB","","Signed 32-bit samples, big-endian",74,null],[13,"F32LSB","","32-bit floating point samples, little-endian",74,null],[13,"F32MSB","","32-bit floating point samples, big-endian",74,null],[4,"AudioStatus","","",null,null],[13,"Stopped","","",75,null],[13,"Playing","","",75,null],[13,"Paused","","",75,null],[5,"drivers","","Gets an iterator of all audio drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[8,"AudioCallback","","",null,null],[16,"Channel","","",76,null],[10,"callback","","",76,null],[8,"AudioFormatNum","","A phantom type for retreiving the SDL_AudioFormat of a given generic type.\nAll format types are returned as native-endian.",null,null],[10,"audio_format","","",77,{"inputs":[{"name":"audioformatnum"}],"output":{"name":"audioformat"}}],[10,"zero","","",77,{"inputs":[{"name":"audioformatnum"}],"output":{"name":"self"}}],[11,"open_playback","sdl2","Opens a new audio device given the desired parameters and callback.",69,{"inputs":[{"name":"audiosubsystem"},{"name":"option"},{"name":"audiospecdesired"},{"name":"f"}],"output":{"name":"sdlresult"}}],[11,"current_audio_driver","","",69,{"inputs":[{"name":"audiosubsystem"}],"output":{"name":"str"}}],[11,"num_audio_playback_devices","","",69,{"inputs":[{"name":"audiosubsystem"}],"output":{"name":"option"}}],[11,"audio_playback_device_name","","",69,{"inputs":[{"name":"audiosubsystem"},{"name":"u32"}],"output":{"name":"sdlresult"}}],[11,"hash","sdl2::audio","",74,null],[11,"fmt","","",74,{"inputs":[{"name":"audioformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"audioformat"},{"name":"audioformat"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"audioformat"},{"name":"audioformat"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"audioformat"}],"output":{"name":"audioformat"}}],[11,"u16_sys","","Unsigned 16-bit samples, native endian",74,{"inputs":[{"name":"audioformat"}],"output":{"name":"audioformat"}}],[11,"s16_sys","","Signed 16-bit samples, native endian",74,{"inputs":[{"name":"audioformat"}],"output":{"name":"audioformat"}}],[11,"s32_sys","","Signed 32-bit samples, native endian",74,{"inputs":[{"name":"audioformat"}],"output":{"name":"audioformat"}}],[11,"f32_sys","","32-bit floating point samples, native endian",74,{"inputs":[{"name":"audioformat"}],"output":{"name":"audioformat"}}],[11,"fmt","","",75,{"inputs":[{"name":"audiostatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",75,null],[11,"eq","","",75,{"inputs":[{"name":"audiostatus"},{"name":"audiostatus"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"audiostatus"},{"name":"audiostatus"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"audiostatus"}],"output":{"name":"audiostatus"}}],[11,"from_i64","","",75,{"inputs":[{"name":"audiostatus"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",75,{"inputs":[{"name":"audiostatus"},{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",78,{"inputs":[{"name":"driveriterator"}],"output":{"name":"driveriterator"}}],[11,"next","","",78,{"inputs":[{"name":"driveriterator"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"load_wav","","Loads a WAVE from the file path.",71,{"inputs":[{"name":"audiospecwav"},{"name":"p"}],"output":{"name":"sdlresult"}}],[11,"load_wav_rw","","Loads a WAVE from the data source.",71,{"inputs":[{"name":"audiospecwav"},{"name":"rwops"}],"output":{"name":"sdlresult"}}],[11,"buffer","","",71,null],[11,"drop","","",71,{"inputs":[{"name":"audiospecwav"}],"output":null}],[11,"fmt","","",73,{"inputs":[{"name":"audiospec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",73,null],[11,"eq","","",73,{"inputs":[{"name":"audiospec"},{"name":"audiospec"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"audiospec"},{"name":"audiospec"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"audiospec"}],"output":{"name":"audiospec"}}],[11,"open_playback","","Opens a new audio device given the desired parameters and callback.",79,{"inputs":[{"name":"audiodevice"},{"name":"audiosubsystem"},{"name":"option"},{"name":"audiospecdesired"},{"name":"f"}],"output":{"name":"sdlresult"}}],[11,"subsystem","","",79,{"inputs":[{"name":"audiodevice"}],"output":{"name":"audiosubsystem"}}],[11,"status","","",79,{"inputs":[{"name":"audiodevice"}],"output":{"name":"audiostatus"}}],[11,"pause","","Pauses playback of the audio device.",79,{"inputs":[{"name":"audiodevice"}],"output":null}],[11,"resume","","Starts playback of the audio device.",79,{"inputs":[{"name":"audiodevice"}],"output":null}],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",79,{"inputs":[{"name":"audiodevice"}],"output":{"name":"audiodevicelockguard"}}],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",79,{"inputs":[{"name":"audiodevice"}],"output":{"name":"cb"}}],[11,"deref","","",80,{"inputs":[{"name":"audiodevicelockguard"}],"output":{"name":"cb"}}],[11,"deref_mut","","",80,{"inputs":[{"name":"audiodevicelockguard"}],"output":{"name":"cb"}}],[11,"drop","","",80,{"inputs":[{"name":"audiodevicelockguard"}],"output":null}],[11,"clone","","",81,{"inputs":[{"name":"audiocvt"}],"output":{"name":"audiocvt"}}],[11,"new","","",81,{"inputs":[{"name":"audiocvt"},{"name":"audioformat"},{"name":"u8"},{"name":"i32"},{"name":"audioformat"},{"name":"u8"},{"name":"i32"}],"output":{"name":"sdlresult"}}],[11,"convert","","Convert audio data to a desired audio format.",81,{"inputs":[{"name":"audiocvt"},{"name":"vec"}],"output":{"name":"vec"}}],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes\ninto `convert()` is unchanged from the result.",81,{"inputs":[{"name":"audiocvt"}],"output":{"name":"bool"}}],[11,"capacity","","Gets the buffer capacity that can contain both the original and\nconverted data.",81,{"inputs":[{"name":"audiocvt"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"version","sdl2","Querying SDL Version",null,null],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use.",null,null],[12,"major","","major version",82,null],[12,"minor","","minor version",82,null],[12,"patch","","update version (patchlevel)",82,null],[5,"version","","Get the version of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"version"}}],[5,"revision","","Get the code revision of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"string"}}],[5,"revision_number","","Get the revision number of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","","",82,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"from_ll","","Convert a raw *SDL_version to Version.",82,{"inputs":[{"name":"version"},{"name":"sdl_version"}],"output":{"name":"version"}}],[11,"fmt","","",82,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"messagebox","sdl2","",null,null],[3,"MessageBoxFlag","sdl2::messagebox","",null,null],[5,"show_simple_message_box","","",null,{"inputs":[{"name":"messageboxflag"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"sdlresult"}}],[17,"MESSAGEBOX_ERROR","","",null,null],[17,"MESSAGEBOX_WARNING","","",null,null],[17,"MESSAGEBOX_INFORMATION","","",null,null],[11,"hash","","",83,null],[11,"cmp","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"eq","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"all","","Returns the set containing all flags.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",83,{"inputs":[{"name":"messageboxflag"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",83,{"inputs":[{"name":"messageboxflag"},{"name":"u32"}],"output":{"name":"messageboxflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"sub","","Returns the set difference of the two sets of flags.",83,{"inputs":[{"name":"messageboxflag"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"not","","Returns the complement of this set of flags.",83,{"inputs":[{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"from_iter","","",83,{"inputs":[{"name":"messageboxflag"},{"name":"t"}],"output":{"name":"messageboxflag"}}],[0,"hint","sdl2","",null,null],[4,"Hint","sdl2::hint","",null,null],[13,"Default","","",84,null],[13,"Normal","","",84,null],[13,"Override","","",84,null],[5,"set","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"get","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"set_with_priority","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"hint"}],"output":{"name":"bool"}}],[11,"unwrap_or_sdlresult","core::result","",85,{"inputs":[{"name":"result"}],"output":{"name":"sdlresult"}}],[11,"remove_nul","","",85,{"inputs":[{"name":"result"}],"output":{"name":"cstring"}}],[6,"SdlResult","sdl2","",null,null]],"paths":[[4,"Error"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEventId"],[4,"Event"],[3,"EventSubsystem"],[3,"EventPump"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[4,"HatState"],[3,"JoystickSubsystem"],[3,"Joystick"],[3,"Guid"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameControllerSubsystem"],[3,"GameController"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"Sdl"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[4,"Mouse"],[3,"Cursor"],[3,"MouseState"],[3,"MouseUtil"],[3,"Point"],[3,"Rect"],[3,"Surface"],[3,"SurfaceRef"],[3,"PixelMasks"],[4,"Color"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"GLContext"],[3,"Window"],[3,"WindowBuilder"],[3,"WindowRef"],[3,"DriverIterator"],[3,"TimerSubsystem"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"TextureAccess"],[4,"BlendMode"],[4,"RendererParent"],[3,"Renderer"],[3,"RendererBuilder"],[3,"RenderTarget"],[3,"Texture"],[3,"DriverIterator"],[3,"RWops"],[3,"ErrorMessage"],[3,"AudioSubsystem"],[3,"HapticSubsystem"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioFormat"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"DriverIterator"],[3,"AudioDevice"],[3,"AudioDeviceLockGuard"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxFlag"],[4,"Hint"],[4,"Result"]]};
searchIndex['sdl2_sys'] = {"items":[[0,"","sdl2_sys","",null,null],[0,"scancode","","",null,null],[6,"SDL_Scancode","sdl2_sys::scancode","",null,null],[17,"SDL_SCANCODE_UNKNOWN","","",null,null],[17,"SDL_SCANCODE_A","","",null,null],[17,"SDL_SCANCODE_B","","",null,null],[17,"SDL_SCANCODE_C","","",null,null],[17,"SDL_SCANCODE_D","","",null,null],[17,"SDL_SCANCODE_E","","",null,null],[17,"SDL_SCANCODE_F","","",null,null],[17,"SDL_SCANCODE_G","","",null,null],[17,"SDL_SCANCODE_H","","",null,null],[17,"SDL_SCANCODE_I","","",null,null],[17,"SDL_SCANCODE_J","","",null,null],[17,"SDL_SCANCODE_K","","",null,null],[17,"SDL_SCANCODE_L","","",null,null],[17,"SDL_SCANCODE_M","","",null,null],[17,"SDL_SCANCODE_N","","",null,null],[17,"SDL_SCANCODE_O","","",null,null],[17,"SDL_SCANCODE_P","","",null,null],[17,"SDL_SCANCODE_Q","","",null,null],[17,"SDL_SCANCODE_R","","",null,null],[17,"SDL_SCANCODE_S","","",null,null],[17,"SDL_SCANCODE_T","","",null,null],[17,"SDL_SCANCODE_U","","",null,null],[17,"SDL_SCANCODE_V","","",null,null],[17,"SDL_SCANCODE_W","","",null,null],[17,"SDL_SCANCODE_X","","",null,null],[17,"SDL_SCANCODE_Y","","",null,null],[17,"SDL_SCANCODE_Z","","",null,null],[17,"SDL_SCANCODE_1","","",null,null],[17,"SDL_SCANCODE_2","","",null,null],[17,"SDL_SCANCODE_3","","",null,null],[17,"SDL_SCANCODE_4","","",null,null],[17,"SDL_SCANCODE_5","","",null,null],[17,"SDL_SCANCODE_6","","",null,null],[17,"SDL_SCANCODE_7","","",null,null],[17,"SDL_SCANCODE_8","","",null,null],[17,"SDL_SCANCODE_9","","",null,null],[17,"SDL_SCANCODE_0","","",null,null],[17,"SDL_SCANCODE_RETURN","","",null,null],[17,"SDL_SCANCODE_ESCAPE","","",null,null],[17,"SDL_SCANCODE_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_TAB","","",null,null],[17,"SDL_SCANCODE_SPACE","","",null,null],[17,"SDL_SCANCODE_MINUS","","",null,null],[17,"SDL_SCANCODE_EQUALS","","",null,null],[17,"SDL_SCANCODE_LEFTBRACKET","","",null,null],[17,"SDL_SCANCODE_RIGHTBRACKET","","",null,null],[17,"SDL_SCANCODE_BACKSLASH","","",null,null],[17,"SDL_SCANCODE_NONUSHASH","","",null,null],[17,"SDL_SCANCODE_SEMICOLON","","",null,null],[17,"SDL_SCANCODE_APOSTROPHE","","",null,null],[17,"SDL_SCANCODE_GRAVE","","",null,null],[17,"SDL_SCANCODE_COMMA","","",null,null],[17,"SDL_SCANCODE_PERIOD","","",null,null],[17,"SDL_SCANCODE_SLASH","","",null,null],[17,"SDL_SCANCODE_CAPSLOCK","","",null,null],[17,"SDL_SCANCODE_F1","","",null,null],[17,"SDL_SCANCODE_F2","","",null,null],[17,"SDL_SCANCODE_F3","","",null,null],[17,"SDL_SCANCODE_F4","","",null,null],[17,"SDL_SCANCODE_F5","","",null,null],[17,"SDL_SCANCODE_F6","","",null,null],[17,"SDL_SCANCODE_F7","","",null,null],[17,"SDL_SCANCODE_F8","","",null,null],[17,"SDL_SCANCODE_F9","","",null,null],[17,"SDL_SCANCODE_F10","","",null,null],[17,"SDL_SCANCODE_F11","","",null,null],[17,"SDL_SCANCODE_F12","","",null,null],[17,"SDL_SCANCODE_PRINTSCREEN","","",null,null],[17,"SDL_SCANCODE_SCROLLLOCK","","",null,null],[17,"SDL_SCANCODE_PAUSE","","",null,null],[17,"SDL_SCANCODE_INSERT","","",null,null],[17,"SDL_SCANCODE_HOME","","",null,null],[17,"SDL_SCANCODE_PAGEUP","","",null,null],[17,"SDL_SCANCODE_DELETE","","",null,null],[17,"SDL_SCANCODE_END","","",null,null],[17,"SDL_SCANCODE_PAGEDOWN","","",null,null],[17,"SDL_SCANCODE_RIGHT","","",null,null],[17,"SDL_SCANCODE_LEFT","","",null,null],[17,"SDL_SCANCODE_DOWN","","",null,null],[17,"SDL_SCANCODE_UP","","",null,null],[17,"SDL_SCANCODE_NUMLOCKCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_DIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_MULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MINUS","","",null,null],[17,"SDL_SCANCODE_KP_PLUS","","",null,null],[17,"SDL_SCANCODE_KP_ENTER","","",null,null],[17,"SDL_SCANCODE_KP_1","","",null,null],[17,"SDL_SCANCODE_KP_2","","",null,null],[17,"SDL_SCANCODE_KP_3","","",null,null],[17,"SDL_SCANCODE_KP_4","","",null,null],[17,"SDL_SCANCODE_KP_5","","",null,null],[17,"SDL_SCANCODE_KP_6","","",null,null],[17,"SDL_SCANCODE_KP_7","","",null,null],[17,"SDL_SCANCODE_KP_8","","",null,null],[17,"SDL_SCANCODE_KP_9","","",null,null],[17,"SDL_SCANCODE_KP_0","","",null,null],[17,"SDL_SCANCODE_KP_PERIOD","","",null,null],[17,"SDL_SCANCODE_NONUSBACKSLASH","","",null,null],[17,"SDL_SCANCODE_APPLICATION","","",null,null],[17,"SDL_SCANCODE_POWER","","",null,null],[17,"SDL_SCANCODE_KP_EQUALS","","",null,null],[17,"SDL_SCANCODE_F13","","",null,null],[17,"SDL_SCANCODE_F14","","",null,null],[17,"SDL_SCANCODE_F15","","",null,null],[17,"SDL_SCANCODE_F16","","",null,null],[17,"SDL_SCANCODE_F17","","",null,null],[17,"SDL_SCANCODE_F18","","",null,null],[17,"SDL_SCANCODE_F19","","",null,null],[17,"SDL_SCANCODE_F20","","",null,null],[17,"SDL_SCANCODE_F21","","",null,null],[17,"SDL_SCANCODE_F22","","",null,null],[17,"SDL_SCANCODE_F23","","",null,null],[17,"SDL_SCANCODE_F24","","",null,null],[17,"SDL_SCANCODE_EXECUTE","","",null,null],[17,"SDL_SCANCODE_HELP","","",null,null],[17,"SDL_SCANCODE_MENU","","",null,null],[17,"SDL_SCANCODE_SELECT","","",null,null],[17,"SDL_SCANCODE_STOP","","",null,null],[17,"SDL_SCANCODE_AGAIN","","",null,null],[17,"SDL_SCANCODE_UNDO","","",null,null],[17,"SDL_SCANCODE_CUT","","",null,null],[17,"SDL_SCANCODE_COPY","","",null,null],[17,"SDL_SCANCODE_PASTE","","",null,null],[17,"SDL_SCANCODE_FIND","","",null,null],[17,"SDL_SCANCODE_MUTE","","",null,null],[17,"SDL_SCANCODE_VOLUMEUP","","",null,null],[17,"SDL_SCANCODE_VOLUMEDOWN","","",null,null],[17,"SDL_SCANCODE_KP_COMMA","","",null,null],[17,"SDL_SCANCODE_KP_EQUALSAS400","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL1","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL2","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL3","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL4","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL5","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL6","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL7","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL8","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL9","","",null,null],[17,"SDL_SCANCODE_LANG1","","",null,null],[17,"SDL_SCANCODE_LANG2","","",null,null],[17,"SDL_SCANCODE_LANG3","","",null,null],[17,"SDL_SCANCODE_LANG4","","",null,null],[17,"SDL_SCANCODE_LANG5","","",null,null],[17,"SDL_SCANCODE_LANG6","","",null,null],[17,"SDL_SCANCODE_LANG7","","",null,null],[17,"SDL_SCANCODE_LANG8","","",null,null],[17,"SDL_SCANCODE_LANG9","","",null,null],[17,"SDL_SCANCODE_ALTERASE","","",null,null],[17,"SDL_SCANCODE_SYSREQ","","",null,null],[17,"SDL_SCANCODE_CANCEL","","",null,null],[17,"SDL_SCANCODE_CLEAR","","",null,null],[17,"SDL_SCANCODE_PRIOR","","",null,null],[17,"SDL_SCANCODE_RETURN2","","",null,null],[17,"SDL_SCANCODE_SEPARATOR","","",null,null],[17,"SDL_SCANCODE_OUT","","",null,null],[17,"SDL_SCANCODE_OPER","","",null,null],[17,"SDL_SCANCODE_CLEARAGAIN","","",null,null],[17,"SDL_SCANCODE_CRSEL","","",null,null],[17,"SDL_SCANCODE_EXSEL","","",null,null],[17,"SDL_SCANCODE_KP_00","","",null,null],[17,"SDL_SCANCODE_KP_000","","",null,null],[17,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",null,null],[17,"SDL_SCANCODE_DECIMALSEPARATOR","","",null,null],[17,"SDL_SCANCODE_CURRENCYUNIT","","",null,null],[17,"SDL_SCANCODE_CURRENCYSUBUNIT","","",null,null],[17,"SDL_SCANCODE_KP_LEFTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_LEFTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_TAB","","",null,null],[17,"SDL_SCANCODE_KP_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_KP_A","","",null,null],[17,"SDL_SCANCODE_KP_B","","",null,null],[17,"SDL_SCANCODE_KP_C","","",null,null],[17,"SDL_SCANCODE_KP_D","","",null,null],[17,"SDL_SCANCODE_KP_E","","",null,null],[17,"SDL_SCANCODE_KP_F","","",null,null],[17,"SDL_SCANCODE_KP_XOR","","",null,null],[17,"SDL_SCANCODE_KP_POWER","","",null,null],[17,"SDL_SCANCODE_KP_PERCENT","","",null,null],[17,"SDL_SCANCODE_KP_LESS","","",null,null],[17,"SDL_SCANCODE_KP_GREATER","","",null,null],[17,"SDL_SCANCODE_KP_AMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_DBLAMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_VERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_COLON","","",null,null],[17,"SDL_SCANCODE_KP_HASH","","",null,null],[17,"SDL_SCANCODE_KP_SPACE","","",null,null],[17,"SDL_SCANCODE_KP_AT","","",null,null],[17,"SDL_SCANCODE_KP_EXCLAM","","",null,null],[17,"SDL_SCANCODE_KP_MEMSTORE","","",null,null],[17,"SDL_SCANCODE_KP_MEMRECALL","","",null,null],[17,"SDL_SCANCODE_KP_MEMCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_MEMADD","","",null,null],[17,"SDL_SCANCODE_KP_MEMSUBTRACT","","",null,null],[17,"SDL_SCANCODE_KP_MEMMULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MEMDIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_PLUSMINUS","","",null,null],[17,"SDL_SCANCODE_KP_CLEAR","","",null,null],[17,"SDL_SCANCODE_KP_CLEARENTRY","","",null,null],[17,"SDL_SCANCODE_KP_BINARY","","",null,null],[17,"SDL_SCANCODE_KP_OCTAL","","",null,null],[17,"SDL_SCANCODE_KP_DECIMAL","","",null,null],[17,"SDL_SCANCODE_KP_HEXADECIMAL","","",null,null],[17,"SDL_SCANCODE_LCTRL","","",null,null],[17,"SDL_SCANCODE_LSHIFT","","",null,null],[17,"SDL_SCANCODE_LALT","","",null,null],[17,"SDL_SCANCODE_LGUI","","",null,null],[17,"SDL_SCANCODE_RCTRL","","",null,null],[17,"SDL_SCANCODE_RSHIFT","","",null,null],[17,"SDL_SCANCODE_RALT","","",null,null],[17,"SDL_SCANCODE_RGUI","","",null,null],[17,"SDL_SCANCODE_MODE","","",null,null],[17,"SDL_SCANCODE_AUDIONEXT","","",null,null],[17,"SDL_SCANCODE_AUDIOPREV","","",null,null],[17,"SDL_SCANCODE_AUDIOSTOP","","",null,null],[17,"SDL_SCANCODE_AUDIOPLAY","","",null,null],[17,"SDL_SCANCODE_AUDIOMUTE","","",null,null],[17,"SDL_SCANCODE_MEDIASELECT","","",null,null],[17,"SDL_SCANCODE_WWW","","",null,null],[17,"SDL_SCANCODE_MAIL","","",null,null],[17,"SDL_SCANCODE_CALCULATOR","","",null,null],[17,"SDL_SCANCODE_COMPUTER","","",null,null],[17,"SDL_SCANCODE_AC_SEARCH","","",null,null],[17,"SDL_SCANCODE_AC_HOME","","",null,null],[17,"SDL_SCANCODE_AC_BACK","","",null,null],[17,"SDL_SCANCODE_AC_FORWARD","","",null,null],[17,"SDL_SCANCODE_AC_STOP","","",null,null],[17,"SDL_SCANCODE_AC_REFRESH","","",null,null],[17,"SDL_SCANCODE_AC_BOOKMARKS","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSDOWN","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSUP","","",null,null],[17,"SDL_SCANCODE_DISPLAYSWITCH","","",null,null],[17,"SDL_SCANCODE_KBDILLUMTOGGLE","","",null,null],[17,"SDL_SCANCODE_KBDILLUMDOWN","","",null,null],[17,"SDL_SCANCODE_KBDILLUMUP","","",null,null],[17,"SDL_SCANCODE_EJECT","","",null,null],[17,"SDL_SCANCODE_SLEEP","","",null,null],[17,"SDL_SCANCODE_APP1","","",null,null],[17,"SDL_SCANCODE_APP2","","",null,null],[17,"SDL_NUM_SCANCODES","","",null,null],[0,"keycode","sdl2_sys","",null,null],[6,"SDL_Keycode","sdl2_sys::keycode","",null,null],[6,"SDL_Keymod","","",null,null],[17,"SDLK_UNKNOWN","","",null,null],[17,"SDLK_BACKSPACE","","",null,null],[17,"SDLK_TAB","","",null,null],[17,"SDLK_RETURN","","",null,null],[17,"SDLK_ESCAPE","","",null,null],[17,"SDLK_SPACE","","",null,null],[17,"SDLK_EXCLAIM","","",null,null],[17,"SDLK_QUOTEDBL","","",null,null],[17,"SDLK_HASH","","",null,null],[17,"SDLK_DOLLAR","","",null,null],[17,"SDLK_PERCENT","","",null,null],[17,"SDLK_AMPERSAND","","",null,null],[17,"SDLK_QUOTE","","",null,null],[17,"SDLK_LEFTPAREN","","",null,null],[17,"SDLK_RIGHTPAREN","","",null,null],[17,"SDLK_ASTERISK","","",null,null],[17,"SDLK_PLUS","","",null,null],[17,"SDLK_COMMA","","",null,null],[17,"SDLK_MINUS","","",null,null],[17,"SDLK_PERIOD","","",null,null],[17,"SDLK_SLASH","","",null,null],[17,"SDLK_0","","",null,null],[17,"SDLK_1","","",null,null],[17,"SDLK_2","","",null,null],[17,"SDLK_3","","",null,null],[17,"SDLK_4","","",null,null],[17,"SDLK_5","","",null,null],[17,"SDLK_6","","",null,null],[17,"SDLK_7","","",null,null],[17,"SDLK_8","","",null,null],[17,"SDLK_9","","",null,null],[17,"SDLK_COLON","","",null,null],[17,"SDLK_SEMICOLON","","",null,null],[17,"SDLK_LESS","","",null,null],[17,"SDLK_EQUALS","","",null,null],[17,"SDLK_GREATER","","",null,null],[17,"SDLK_QUESTION","","",null,null],[17,"SDLK_AT","","",null,null],[17,"SDLK_LEFTBRACKET","","",null,null],[17,"SDLK_BACKSLASH","","",null,null],[17,"SDLK_RIGHTBRACKET","","",null,null],[17,"SDLK_CARET","","",null,null],[17,"SDLK_UNDERSCORE","","",null,null],[17,"SDLK_BACKQUOTE","","",null,null],[17,"SDLK_a","","",null,null],[17,"SDLK_b","","",null,null],[17,"SDLK_c","","",null,null],[17,"SDLK_d","","",null,null],[17,"SDLK_e","","",null,null],[17,"SDLK_f","","",null,null],[17,"SDLK_g","","",null,null],[17,"SDLK_h","","",null,null],[17,"SDLK_i","","",null,null],[17,"SDLK_j","","",null,null],[17,"SDLK_k","","",null,null],[17,"SDLK_l","","",null,null],[17,"SDLK_m","","",null,null],[17,"SDLK_n","","",null,null],[17,"SDLK_o","","",null,null],[17,"SDLK_p","","",null,null],[17,"SDLK_q","","",null,null],[17,"SDLK_r","","",null,null],[17,"SDLK_s","","",null,null],[17,"SDLK_t","","",null,null],[17,"SDLK_u","","",null,null],[17,"SDLK_v","","",null,null],[17,"SDLK_w","","",null,null],[17,"SDLK_x","","",null,null],[17,"SDLK_y","","",null,null],[17,"SDLK_z","","",null,null],[17,"SDLK_DELETE","","",null,null],[17,"SDLK_CAPSLOCK","","",null,null],[17,"SDLK_F1","","",null,null],[17,"SDLK_F2","","",null,null],[17,"SDLK_F3","","",null,null],[17,"SDLK_F4","","",null,null],[17,"SDLK_F5","","",null,null],[17,"SDLK_F6","","",null,null],[17,"SDLK_F7","","",null,null],[17,"SDLK_F8","","",null,null],[17,"SDLK_F9","","",null,null],[17,"SDLK_F10","","",null,null],[17,"SDLK_F11","","",null,null],[17,"SDLK_F12","","",null,null],[17,"SDLK_PRINTSCREEN","","",null,null],[17,"SDLK_SCROLLLOCK","","",null,null],[17,"SDLK_PAUSE","","",null,null],[17,"SDLK_INSERT","","",null,null],[17,"SDLK_HOME","","",null,null],[17,"SDLK_PAGEUP","","",null,null],[17,"SDLK_END","","",null,null],[17,"SDLK_PAGEDOWN","","",null,null],[17,"SDLK_RIGHT","","",null,null],[17,"SDLK_LEFT","","",null,null],[17,"SDLK_DOWN","","",null,null],[17,"SDLK_UP","","",null,null],[17,"SDLK_NUMLOCKCLEAR","","",null,null],[17,"SDLK_KPDIVIDE","","",null,null],[17,"SDLK_KPMULTIPLY","","",null,null],[17,"SDLK_KPMINUS","","",null,null],[17,"SDLK_KPPLUS","","",null,null],[17,"SDLK_KPENTER","","",null,null],[17,"SDLK_KP1","","",null,null],[17,"SDLK_KP2","","",null,null],[17,"SDLK_KP3","","",null,null],[17,"SDLK_KP4","","",null,null],[17,"SDLK_KP5","","",null,null],[17,"SDLK_KP6","","",null,null],[17,"SDLK_KP7","","",null,null],[17,"SDLK_KP8","","",null,null],[17,"SDLK_KP9","","",null,null],[17,"SDLK_KP0","","",null,null],[17,"SDLK_KPPERIOD","","",null,null],[17,"SDLK_APPLICATION","","",null,null],[17,"SDLK_POWER","","",null,null],[17,"SDLK_KPEQUALS","","",null,null],[17,"SDLK_F13","","",null,null],[17,"SDLK_F14","","",null,null],[17,"SDLK_F15","","",null,null],[17,"SDLK_F16","","",null,null],[17,"SDLK_F17","","",null,null],[17,"SDLK_F18","","",null,null],[17,"SDLK_F19","","",null,null],[17,"SDLK_F20","","",null,null],[17,"SDLK_F21","","",null,null],[17,"SDLK_F22","","",null,null],[17,"SDLK_F23","","",null,null],[17,"SDLK_F24","","",null,null],[17,"SDLK_EXECUTE","","",null,null],[17,"SDLK_HELP","","",null,null],[17,"SDLK_MENU","","",null,null],[17,"SDLK_SELECT","","",null,null],[17,"SDLK_STOP","","",null,null],[17,"SDLK_AGAIN","","",null,null],[17,"SDLK_UNDO","","",null,null],[17,"SDLK_CUT","","",null,null],[17,"SDLK_COPY","","",null,null],[17,"SDLK_PASTE","","",null,null],[17,"SDLK_FIND","","",null,null],[17,"SDLK_MUTE","","",null,null],[17,"SDLK_VOLUMEUP","","",null,null],[17,"SDLK_VOLUMEDOWN","","",null,null],[17,"SDLK_KPCOMMA","","",null,null],[17,"SDLK_KPEQUALSAS400","","",null,null],[17,"SDLK_ALTERASE","","",null,null],[17,"SDLK_SYSREQ","","",null,null],[17,"SDLK_CANCEL","","",null,null],[17,"SDLK_CLEAR","","",null,null],[17,"SDLK_PRIOR","","",null,null],[17,"SDLK_RETURN2","","",null,null],[17,"SDLK_SEPARATOR","","",null,null],[17,"SDLK_OUT","","",null,null],[17,"SDLK_OPER","","",null,null],[17,"SDLK_CLEARAGAIN","","",null,null],[17,"SDLK_CRSEL","","",null,null],[17,"SDLK_EXSEL","","",null,null],[17,"SDLK_KP00","","",null,null],[17,"SDLK_KP000","","",null,null],[17,"SDLK_THOUSANDSSEPARATOR","","",null,null],[17,"SDLK_DECIMALSEPARATOR","","",null,null],[17,"SDLK_CURRENCYUNIT","","",null,null],[17,"SDLK_CURRENCYSUBUNIT","","",null,null],[17,"SDLK_KPLEFTPAREN","","",null,null],[17,"SDLK_KPRIGHTPAREN","","",null,null],[17,"SDLK_KPLEFTBRACE","","",null,null],[17,"SDLK_KPRIGHTBRACE","","",null,null],[17,"SDLK_KPTAB","","",null,null],[17,"SDLK_KPBACKSPACE","","",null,null],[17,"SDLK_KPA","","",null,null],[17,"SDLK_KPB","","",null,null],[17,"SDLK_KPC","","",null,null],[17,"SDLK_KPD","","",null,null],[17,"SDLK_KPE","","",null,null],[17,"SDLK_KPF","","",null,null],[17,"SDLK_KPXOR","","",null,null],[17,"SDLK_KPPOWER","","",null,null],[17,"SDLK_KPPERCENT","","",null,null],[17,"SDLK_KPLESS","","",null,null],[17,"SDLK_KPGREATER","","",null,null],[17,"SDLK_KPAMPERSAND","","",null,null],[17,"SDLK_KPDBLAMPERSAND","","",null,null],[17,"SDLK_KPVERTICALBAR","","",null,null],[17,"SDLK_KPDBLVERTICALBAR","","",null,null],[17,"SDLK_KPCOLON","","",null,null],[17,"SDLK_KPHASH","","",null,null],[17,"SDLK_KPSPACE","","",null,null],[17,"SDLK_KPAT","","",null,null],[17,"SDLK_KPEXCLAM","","",null,null],[17,"SDLK_KPMEMSTORE","","",null,null],[17,"SDLK_KPMEMRECALL","","",null,null],[17,"SDLK_KPMEMCLEAR","","",null,null],[17,"SDLK_KPMEMADD","","",null,null],[17,"SDLK_KPMEMSUBTRACT","","",null,null],[17,"SDLK_KPMEMMULTIPLY","","",null,null],[17,"SDLK_KPMEMDIVIDE","","",null,null],[17,"SDLK_KPPLUSMINUS","","",null,null],[17,"SDLK_KPCEAR","","",null,null],[17,"SDLK_KPCLEARENTRY","","",null,null],[17,"SDLK_KPBINARY","","",null,null],[17,"SDLK_KPOCTAL","","",null,null],[17,"SDLK_KPDECIMAL","","",null,null],[17,"SDLK_KPHEXADECIMAL","","",null,null],[17,"SDLK_LCTRL","","",null,null],[17,"SDLK_LSHIFT","","",null,null],[17,"SDLK_LALT","","",null,null],[17,"SDLK_LGUI","","",null,null],[17,"SDLK_RCTRL","","",null,null],[17,"SDLK_RSHIFT","","",null,null],[17,"SDLK_RALT","","",null,null],[17,"SDLK_RGUI","","",null,null],[17,"SDLK_MODE","","",null,null],[17,"SDLK_AUDIONEXT","","",null,null],[17,"SDLK_AUDIOPREV","","",null,null],[17,"SDLK_AUDIOSTOP","","",null,null],[17,"SDLK_AUDIOPLAY","","",null,null],[17,"SDLK_AUDIOMUTE","","",null,null],[17,"SDLK_MEDIASELECT","","",null,null],[17,"SDLK_WWW","","",null,null],[17,"SDLK_MAIL","","",null,null],[17,"SDLK_CALCULATOR","","",null,null],[17,"SDLK_COMPUTER","","",null,null],[17,"SDLK_ACSEARCH","","",null,null],[17,"SDLK_ACHOME","","",null,null],[17,"SDLK_ACBACK","","",null,null],[17,"SDLK_ACFORWARD","","",null,null],[17,"SDLK_ACSTOP","","",null,null],[17,"SDLK_ACREFRESH","","",null,null],[17,"SDLK_ACBOOKMARKS","","",null,null],[17,"SDLK_BRIGHTNESSDOWN","","",null,null],[17,"SDLK_BRIGHTNESSUP","","",null,null],[17,"SDLK_DISPLAYSWITCH","","",null,null],[17,"SDLK_KBDILLUMTOGGLE","","",null,null],[17,"SDLK_KBDILLUMDOWN","","",null,null],[17,"SDLK_KBDILLUMUP","","",null,null],[17,"SDLK_EJECT","","",null,null],[17,"SDLK_SLEEP","","",null,null],[17,"KMOD_NONE","","",null,null],[17,"KMOD_LSHIFT","","",null,null],[17,"KMOD_RSHIFT","","",null,null],[17,"KMOD_LCTRL","","",null,null],[17,"KMOD_RCTRL","","",null,null],[17,"KMOD_LALT","","",null,null],[17,"KMOD_RALT","","",null,null],[17,"KMOD_LGUI","","",null,null],[17,"KMOD_RGUI","","",null,null],[17,"KMOD_NUM","","",null,null],[17,"KMOD_CAPS","","",null,null],[17,"KMOD_MODE","","",null,null],[17,"KMOD_RESERVED","","",null,null],[0,"audio","sdl2_sys","",null,null],[3,"SDL_AudioSpec","sdl2_sys::audio","",null,null],[12,"freq","","",0,null],[12,"format","","",0,null],[12,"channels","","",0,null],[12,"silence","","",0,null],[12,"samples","","",0,null],[12,"padding","","",0,null],[12,"size","","",0,null],[12,"callback","","",0,null],[12,"userdata","","",0,null],[3,"SDL_AudioCVT","","",null,null],[12,"needed","","",1,null],[12,"src_format","","",1,null],[12,"dst_format","","",1,null],[12,"rate_incr","","",1,null],[12,"buf","","",1,null],[12,"len","","",1,null],[12,"len_cvt","","",1,null],[12,"len_mult","","",1,null],[12,"len_ratio","","",1,null],[5,"SDL_GetNumAudioDrivers","","",null,null],[5,"SDL_GetAudioDriver","","",null,null],[5,"SDL_AudioInit","","",null,null],[5,"SDL_AudioQuit","","",null,null],[5,"SDL_GetCurrentAudioDriver","","",null,null],[5,"SDL_OpenAudio","","",null,null],[5,"SDL_GetNumAudioDevices","","",null,null],[5,"SDL_GetAudioDeviceName","","",null,null],[5,"SDL_OpenAudioDevice","","",null,null],[5,"SDL_GetAudioStatus","","",null,null],[5,"SDL_GetAudioDeviceStatus","","",null,null],[5,"SDL_PauseAudio","","",null,null],[5,"SDL_PauseAudioDevice","","",null,null],[5,"SDL_LoadWAV_RW","","",null,null],[5,"SDL_FreeWAV","","",null,null],[5,"SDL_BuildAudioCVT","","",null,null],[5,"SDL_ConvertAudio","","",null,null],[5,"SDL_MixAudio","","",null,null],[5,"SDL_MixAudioFormat","","",null,null],[5,"SDL_LockAudio","","",null,null],[5,"SDL_LockAudioDevice","","",null,null],[5,"SDL_UnlockAudio","","",null,null],[5,"SDL_UnlockAudioDevice","","",null,null],[5,"SDL_CloseAudio","","",null,null],[5,"SDL_CloseAudioDevice","","",null,null],[6,"SDL_AudioFormat","","",null,null],[6,"SDL_AudioCallback","","",null,null],[6,"SDL_AudioFilter","","",null,null],[6,"SDL_AudioDeviceID","","",null,null],[6,"SDL_AudioStatus","","",null,null],[17,"AUDIO_U8","","",null,null],[17,"AUDIO_S8","","",null,null],[17,"AUDIO_U16LSB","","",null,null],[17,"AUDIO_S16LSB","","",null,null],[17,"AUDIO_U16MSB","","",null,null],[17,"AUDIO_S16MSB","","",null,null],[17,"AUDIO_U16","","",null,null],[17,"AUDIO_S16","","",null,null],[17,"AUDIO_S32LSB","","",null,null],[17,"AUDIO_S32MSB","","",null,null],[17,"AUDIO_S32","","",null,null],[17,"AUDIO_F32LSB","","",null,null],[17,"AUDIO_F32MSB","","",null,null],[17,"AUDIO_F32","","",null,null],[17,"AUDIO_U16SYS","","",null,null],[17,"AUDIO_S16SYS","","",null,null],[17,"AUDIO_S32SYS","","",null,null],[17,"AUDIO_F32SYS","","",null,null],[17,"SDL_AUDIO_STOPPED","","",null,null],[17,"SDL_AUDIO_PLAYING","","",null,null],[17,"SDL_AUDIO_PAUSED","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"sdl_audiocvt"}],"output":{"name":"sdl_audiocvt"}}],[0,"clipboard","sdl2_sys","",null,null],[5,"SDL_SetClipboardText","sdl2_sys::clipboard","",null,null],[5,"SDL_GetClipboardText","","",null,null],[5,"SDL_HasClipboardText","","",null,null],[6,"SDL_bool","","",null,null],[0,"controller","sdl2_sys","",null,null],[3,"SDL_GameControllerButtonBind","sdl2_sys::controller","",null,null],[3,"SDL_GameControllerButtonBindData","","",null,null],[3,"SDL_GameControllerButtonBindDataHat","","",null,null],[5,"SDL_GameControllerAddMapping","","",null,null],[5,"SDL_GameControllerMappingForGUID","","",null,null],[5,"SDL_GameControllerMapping","","",null,null],[5,"SDL_IsGameController","","",null,null],[5,"SDL_GameControllerNameForIndex","","",null,null],[5,"SDL_GameControllerOpen","","",null,null],[5,"SDL_GameControllerName","","",null,null],[5,"SDL_GameControllerGetAttached","","",null,null],[5,"SDL_GameControllerGetJoystick","","",null,null],[5,"SDL_GameControllerEventState","","",null,null],[5,"SDL_GameControllerUpdate","","",null,null],[5,"SDL_GameControllerGetAxisFromString","","",null,null],[5,"SDL_GameControllerGetStringForAxis","","",null,null],[5,"SDL_GameControllerGetBindForAxis","","",null,null],[5,"SDL_GameControllerGetAxis","","",null,null],[5,"SDL_GameControllerGetButtonFromString","","",null,null],[5,"SDL_GameControllerGetStringForButton","","",null,null],[5,"SDL_GameControllerGetBindForButton","","",null,null],[5,"SDL_GameControllerGetButton","","",null,null],[5,"SDL_GameControllerClose","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_GameController","","",null,null],[6,"SDL_GameControllerBindType","","",null,null],[6,"SDL_GameControllerAxis","","",null,null],[6,"SDL_GameControllerButton","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_NONE","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_AXIS","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_HAT","","",null,null],[17,"SDL_CONTROLLER_AXIS_INVALID","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",null,null],[17,"SDL_CONTROLLER_AXIS_MAX","","",null,null],[17,"SDL_CONTROLLER_BUTTON_INVALID","","",null,null],[17,"SDL_CONTROLLER_BUTTON_A","","",null,null],[17,"SDL_CONTROLLER_BUTTON_B","","",null,null],[17,"SDL_CONTROLLER_BUTTON_X","","",null,null],[17,"SDL_CONTROLLER_BUTTON_Y","","",null,null],[17,"SDL_CONTROLLER_BUTTON_BACK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_GUIDE","","",null,null],[17,"SDL_CONTROLLER_BUTTON_START","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_MAX","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"sdl_gamecontrollerbuttonbind"}],"output":{"name":"sdl_gamecontrollerbuttonbind"}}],[11,"clone","","",3,{"inputs":[{"name":"sdl_gamecontrollerbuttonbinddata"}],"output":{"name":"sdl_gamecontrollerbuttonbinddata"}}],[11,"clone","","",4,{"inputs":[{"name":"sdl_gamecontrollerbuttonbinddatahat"}],"output":{"name":"sdl_gamecontrollerbuttonbinddatahat"}}],[11,"button","","",3,null],[11,"axis","","",3,null],[11,"hat","","",3,null],[0,"cpuinfo","sdl2_sys","",null,null],[5,"SDL_GetCPUCount","sdl2_sys::cpuinfo","",null,null],[5,"SDL_GetCPUCacheLineSize","","",null,null],[5,"SDL_HasRDTSC","","",null,null],[5,"SDL_HasAltiVec","","",null,null],[5,"SDL_HasMMX","","",null,null],[5,"SDL_Has3DNow","","",null,null],[5,"SDL_HasSSE","","",null,null],[5,"SDL_HasSSE2","","",null,null],[5,"SDL_HasSSE3","","",null,null],[5,"SDL_HasSSE41","","",null,null],[5,"SDL_HasSSE42","","",null,null],[5,"SDL_HasAVX","","",null,null],[5,"SDL_GetSystemRAM","","",null,null],[6,"SDL_bool","","",null,null],[0,"filesystem","sdl2_sys","",null,null],[5,"SDL_GetBasePath","sdl2_sys::filesystem","",null,null],[5,"SDL_GetPrefPath","","",null,null],[0,"haptic","sdl2_sys","",null,null],[3,"SDL_HapticDirection","sdl2_sys::haptic","",null,null],[12,"type_","","",5,null],[12,"dir","","",5,null],[3,"SDL_HapticConstant","","",null,null],[12,"type_","","",6,null],[12,"direction","","",6,null],[12,"length","","",6,null],[12,"delay","","",6,null],[12,"button","","",6,null],[12,"interval","","",6,null],[12,"level","","",6,null],[12,"attack_length","","",6,null],[12,"attack_level","","",6,null],[12,"fade_length","","",6,null],[12,"fade_level","","",6,null],[3,"SDL_HapticPeriodic","","",null,null],[12,"type_","","",7,null],[12,"direction","","",7,null],[12,"length","","",7,null],[12,"delay","","",7,null],[12,"button","","",7,null],[12,"interval","","",7,null],[12,"period","","",7,null],[12,"magnitude","","",7,null],[12,"offset","","",7,null],[12,"phase","","",7,null],[12,"attack_length","","",7,null],[12,"attack_level","","",7,null],[12,"fade_length","","",7,null],[12,"fade_level","","",7,null],[3,"SDL_HapticCondition","","",null,null],[12,"type_","","",8,null],[12,"direction","","",8,null],[12,"length","","",8,null],[12,"delay","","",8,null],[12,"button","","",8,null],[12,"interval","","",8,null],[12,"right_sat","","",8,null],[12,"left_sat","","",8,null],[12,"right_coeff","","",8,null],[12,"left_coeff","","",8,null],[12,"deadband","","",8,null],[12,"center","","",8,null],[3,"SDL_HapticRamp","","",null,null],[12,"type_","","",9,null],[12,"length","","",9,null],[12,"delay","","",9,null],[12,"button","","",9,null],[12,"interval","","",9,null],[12,"start","","",9,null],[12,"end","","",9,null],[12,"attack_length","","",9,null],[12,"attack_level","","",9,null],[12,"fade_length","","",9,null],[12,"fade_level","","",9,null],[3,"SDL_HapticLeftRight","","",null,null],[12,"type_","","",10,null],[12,"length","","",10,null],[12,"large_magnitude","","",10,null],[12,"small_magnitude","","",10,null],[3,"SDL_HapticCustom","","",null,null],[12,"type_","","",11,null],[12,"direction","","",11,null],[12,"length","","",11,null],[12,"delay","","",11,null],[12,"button","","",11,null],[12,"interval","","",11,null],[12,"channels","","",11,null],[12,"period","","",11,null],[12,"samples","","",11,null],[12,"data","","",11,null],[12,"attack_length","","",11,null],[12,"attack_level","","",11,null],[12,"fade_length","","",11,null],[12,"fade_level","","",11,null],[3,"SDL_HapticEffect","","",null,null],[12,"data","","",12,null],[5,"SDL_NumHaptics","","",null,null],[5,"SDL_HapticName","","",null,null],[5,"SDL_HapticOpen","","",null,null],[5,"SDL_HapticOpened","","",null,null],[5,"SDL_HapticIndex","","",null,null],[5,"SDL_MouseIsHaptic","","",null,null],[5,"SDL_HapticOpenFromMouse","","",null,null],[5,"SDL_JoystickIsHaptic","","",null,null],[5,"SDL_HapticOpenFromJoystick","","",null,null],[5,"SDL_HapticClose","","",null,null],[5,"SDL_HapticNumEffects","","",null,null],[5,"SDL_HapticNumEffectsPlaying","","",null,null],[5,"SDL_HapticQuery","","",null,null],[5,"SDL_HapticNumAxes","","",null,null],[5,"SDL_HapticEffectSupported","","",null,null],[5,"SDL_HapticNewEffect","","",null,null],[5,"SDL_HapticUpdateEffect","","",null,null],[5,"SDL_HapticRunEffect","","",null,null],[5,"SDL_HapticStopEffect","","",null,null],[5,"SDL_HapticDestroyEffect","","",null,null],[5,"SDL_HapticGetEffectStatus","","",null,null],[5,"SDL_HapticSetGain","","",null,null],[5,"SDL_HapticSetAutocenter","","",null,null],[5,"SDL_HapticPause","","",null,null],[5,"SDL_HapticUnpause","","",null,null],[5,"SDL_HapticStopAll","","",null,null],[5,"SDL_HapticRumbleSupported","","",null,null],[5,"SDL_HapticRumbleInit","","",null,null],[5,"SDL_HapticRumblePlay","","",null,null],[5,"SDL_HapticRumbleStop","","",null,null],[6,"SDL_Haptic","","",null,null],[17,"SDL_HAPTIC_CONSTANT","","",null,null],[17,"SDL_HAPTIC_SINE","","",null,null],[17,"SDL_HAPTIC_LEFTRIGHT","","",null,null],[17,"SDL_HAPTIC_TRIANGLE","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHUP","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",null,null],[17,"SDL_HAPTIC_RAMP","","",null,null],[17,"SDL_HAPTIC_SPRING","","",null,null],[17,"SDL_HAPTIC_DAMPER","","",null,null],[17,"SDL_HAPTIC_INERTIA","","",null,null],[17,"SDL_HAPTIC_FRICTION","","",null,null],[17,"SDL_HAPTIC_CUSTOM","","",null,null],[17,"SDL_HAPTIC_GAIN","","",null,null],[17,"SDL_HAPTIC_AUTOCENTER","","",null,null],[17,"SDL_HAPTIC_STATUS","","",null,null],[17,"SDL_HAPTIC_PAUSE","","",null,null],[11,"clone","","",5,{"inputs":[{"name":"sdl_hapticdirection"}],"output":{"name":"sdl_hapticdirection"}}],[11,"clone","","",6,{"inputs":[{"name":"sdl_hapticconstant"}],"output":{"name":"sdl_hapticconstant"}}],[11,"clone","","",7,{"inputs":[{"name":"sdl_hapticperiodic"}],"output":{"name":"sdl_hapticperiodic"}}],[11,"clone","","",8,{"inputs":[{"name":"sdl_hapticcondition"}],"output":{"name":"sdl_hapticcondition"}}],[11,"clone","","",9,{"inputs":[{"name":"sdl_hapticramp"}],"output":{"name":"sdl_hapticramp"}}],[11,"clone","","",10,{"inputs":[{"name":"sdl_hapticleftright"}],"output":{"name":"sdl_hapticleftright"}}],[11,"type_","","",12,null],[11,"constant","","",12,null],[11,"periodic","","",12,null],[11,"condition","","",12,null],[11,"ramp","","",12,null],[11,"left_right","","",12,null],[11,"custom","","",12,null],[0,"gesture","sdl2_sys","",null,null],[5,"SDL_RecordGesture","sdl2_sys::gesture","",null,null],[5,"SDL_SaveAllDollarTemplates","","",null,null],[5,"SDL_SaveDollarTemplate","","",null,null],[5,"SDL_LoadDollarTemplates","","",null,null],[6,"SDL_GestureID","","",null,null],[0,"joystick","sdl2_sys","",null,null],[3,"SDL_JoystickGUID","sdl2_sys::joystick","",null,null],[12,"data","","",13,null],[5,"SDL_NumJoysticks","","",null,null],[5,"SDL_JoystickNameForIndex","","",null,null],[5,"SDL_JoystickOpen","","",null,null],[5,"SDL_JoystickName","","",null,null],[5,"SDL_JoystickGetDeviceGUID","","",null,null],[5,"SDL_JoystickGetGUID","","",null,null],[5,"SDL_JoystickGetGUIDString","","",null,null],[5,"SDL_JoystickGetGUIDFromString","","",null,null],[5,"SDL_JoystickGetAttached","","",null,null],[5,"SDL_JoystickInstanceID","","",null,null],[5,"SDL_JoystickNumAxes","","",null,null],[5,"SDL_JoystickNumBalls","","",null,null],[5,"SDL_JoystickNumHats","","",null,null],[5,"SDL_JoystickNumButtons","","",null,null],[5,"SDL_JoystickUpdate","","",null,null],[5,"SDL_JoystickEventState","","",null,null],[5,"SDL_JoystickGetAxis","","",null,null],[5,"SDL_JoystickGetHat","","",null,null],[5,"SDL_JoystickGetBall","","",null,null],[5,"SDL_JoystickGetButton","","",null,null],[5,"SDL_JoystickClose","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_Joystick","","",null,null],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"sdl_joystickguid"},{"name":"sdl_joystickguid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"sdl_joystickguid"},{"name":"sdl_joystickguid"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"sdl_joystickguid"}],"output":{"name":"sdl_joystickguid"}}],[0,"keyboard","sdl2_sys","",null,null],[3,"SDL_Keysym","sdl2_sys::keyboard","",null,null],[12,"scancode","","",14,null],[12,"sym","","",14,null],[12,"_mod","","",14,null],[12,"unused","","",14,null],[5,"SDL_GetKeyboardFocus","","",null,null],[5,"SDL_GetKeyboardState","","",null,null],[5,"SDL_GetModState","","",null,null],[5,"SDL_SetModState","","",null,null],[5,"SDL_GetKeyFromScancode","","",null,null],[5,"SDL_GetScancodeFromKey","","",null,null],[5,"SDL_GetScancodeName","","",null,null],[5,"SDL_GetScancodeFromName","","",null,null],[5,"SDL_GetKeyName","","",null,null],[5,"SDL_GetKeyFromName","","",null,null],[5,"SDL_StartTextInput","","",null,null],[5,"SDL_IsTextInputActive","","",null,null],[5,"SDL_StopTextInput","","",null,null],[5,"SDL_SetTextInputRect","","",null,null],[5,"SDL_HasScreenKeyboardSupport","","",null,null],[5,"SDL_IsScreenKeyboardShown","","",null,null],[6,"SDL_bool","","",null,null],[11,"clone","","",14,{"inputs":[{"name":"sdl_keysym"}],"output":{"name":"sdl_keysym"}}],[0,"messagebox","sdl2_sys","",null,null],[5,"SDL_ShowSimpleMessageBox","sdl2_sys::messagebox","",null,null],[6,"SDL_MessageBoxFlags","","",null,null],[17,"SDL_MESSAGEBOX_ERROR","","",null,null],[17,"SDL_MESSAGEBOX_WARNING","","",null,null],[17,"SDL_MESSAGEBOX_INFORMATION","","",null,null],[0,"rect","sdl2_sys","",null,null],[3,"SDL_Point","sdl2_sys::rect","A structure that defines a two dimensional point.",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"SDL_Rect","","A structure that defines a rectangle, with the origin at the upper left.",null,null],[12,"x","","",16,null],[12,"y","","",16,null],[12,"w","","",16,null],[12,"h","","",16,null],[5,"SDL_HasIntersection","","",null,null],[5,"SDL_IntersectRect","","",null,null],[5,"SDL_UnionRect","","",null,null],[5,"SDL_EnclosePoints","","",null,null],[5,"SDL_IntersectRectAndLine","","",null,null],[6,"SDL_bool","","",null,null],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"sdl_point"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"sdl_point"},{"name":"sdl_point"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"sdl_point"},{"name":"sdl_point"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"sdl_point"}],"output":{"name":"sdl_point"}}],[11,"hash","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"sdl_rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"sdl_rect"},{"name":"sdl_rect"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"sdl_rect"},{"name":"sdl_rect"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"sdl_rect"}],"output":{"name":"sdl_rect"}}],[0,"pixels","sdl2_sys","",null,null],[3,"SDL_Color","sdl2_sys::pixels","",null,null],[12,"r","","",17,null],[12,"g","","",17,null],[12,"b","","",17,null],[12,"a","","",17,null],[3,"SDL_Palette","","",null,null],[12,"ncolors","","",18,null],[12,"colors","","",18,null],[12,"version","","",18,null],[12,"refcount","","",18,null],[3,"SDL_PixelFormat","","",null,null],[12,"format","","",19,null],[12,"palette","","",19,null],[12,"BitsPerPixel","","",19,null],[12,"BytesPerPixel","","",19,null],[12,"padding","","",19,null],[12,"Rmask","","",19,null],[12,"Gmask","","",19,null],[12,"Bmask","","",19,null],[12,"Amask","","",19,null],[12,"Rloss","","",19,null],[12,"Gloss","","",19,null],[12,"Bloss","","",19,null],[12,"Aloss","","",19,null],[12,"Rshift","","",19,null],[12,"Gshift","","",19,null],[12,"Bshift","","",19,null],[12,"Ashift","","",19,null],[12,"refcount","","",19,null],[12,"next","","",19,null],[5,"SDL_GetRGB","","",null,null],[5,"SDL_GetRGBA","","",null,null],[5,"SDL_MapRGB","","",null,null],[5,"SDL_MapRGBA","","",null,null],[5,"SDL_PixelFormatEnumToMasks","","",null,null],[5,"SDL_MasksToPixelFormatEnum","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_PixelFormatEnum","","",null,null],[17,"SDL_PIXELFORMAT_UNKNOWN","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX8","","",null,null],[17,"SDL_PIXELFORMAT_RGB332","","",null,null],[17,"SDL_PIXELFORMAT_RGB444","","",null,null],[17,"SDL_PIXELFORMAT_RGB555","","",null,null],[17,"SDL_PIXELFORMAT_BGR555","","",null,null],[17,"SDL_PIXELFORMAT_ARGB4444","","",null,null],[17,"SDL_PIXELFORMAT_RGBA4444","","",null,null],[17,"SDL_PIXELFORMAT_ABGR4444","","",null,null],[17,"SDL_PIXELFORMAT_BGRA4444","","",null,null],[17,"SDL_PIXELFORMAT_ARGB1555","","",null,null],[17,"SDL_PIXELFORMAT_RGBA5551","","",null,null],[17,"SDL_PIXELFORMAT_ABGR1555","","",null,null],[17,"SDL_PIXELFORMAT_BGRA5551","","",null,null],[17,"SDL_PIXELFORMAT_RGB565","","",null,null],[17,"SDL_PIXELFORMAT_BGR565","","",null,null],[17,"SDL_PIXELFORMAT_RGB24","","",null,null],[17,"SDL_PIXELFORMAT_BGR24","","",null,null],[17,"SDL_PIXELFORMAT_RGB888","","",null,null],[17,"SDL_PIXELFORMAT_RGBX8888","","",null,null],[17,"SDL_PIXELFORMAT_BGR888","","",null,null],[17,"SDL_PIXELFORMAT_BGRX8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB8888","","",null,null],[17,"SDL_PIXELFORMAT_RGBA8888","","",null,null],[17,"SDL_PIXELFORMAT_ABGR8888","","",null,null],[17,"SDL_PIXELFORMAT_BGRA8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB2101010","","",null,null],[17,"SDL_PIXELFORMAT_YV12","","",null,null],[17,"SDL_PIXELFORMAT_IYUV","","",null,null],[17,"SDL_PIXELFORMAT_YUY2","","",null,null],[17,"SDL_PIXELFORMAT_UYVY","","",null,null],[17,"SDL_PIXELFORMAT_YVYU","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"sdl_color"}],"output":{"name":"sdl_color"}}],[0,"render","sdl2_sys","",null,null],[3,"SDL_RendererInfo","sdl2_sys::render","",null,null],[12,"name","","",20,null],[12,"flags","","",20,null],[12,"num_texture_formats","","",20,null],[12,"texture_formats","","",20,null],[12,"max_texture_width","","",20,null],[12,"max_texture_height","","",20,null],[3,"SDL_Renderer","","",null,null],[3,"SDL_Texture","","",null,null],[5,"SDL_GetNumRenderDrivers","","",null,null],[5,"SDL_GetRenderDriverInfo","","",null,null],[5,"SDL_CreateWindowAndRenderer","","",null,null],[5,"SDL_CreateRenderer","","",null,null],[5,"SDL_CreateSoftwareRenderer","","",null,null],[5,"SDL_GetRenderer","","",null,null],[5,"SDL_GetRendererInfo","","",null,null],[5,"SDL_GetRendererOutputSize","","",null,null],[5,"SDL_CreateTexture","","",null,null],[5,"SDL_CreateTextureFromSurface","","",null,null],[5,"SDL_QueryTexture","","",null,null],[5,"SDL_SetTextureColorMod","","",null,null],[5,"SDL_GetTextureColorMod","","",null,null],[5,"SDL_SetTextureAlphaMod","","",null,null],[5,"SDL_GetTextureAlphaMod","","",null,null],[5,"SDL_SetTextureBlendMode","","",null,null],[5,"SDL_GetTextureBlendMode","","",null,null],[5,"SDL_UpdateTexture","","",null,null],[5,"SDL_UpdateYUVTexture","","",null,null],[5,"SDL_LockTexture","","",null,null],[5,"SDL_UnlockTexture","","",null,null],[5,"SDL_RenderTargetSupported","","",null,null],[5,"SDL_SetRenderTarget","","",null,null],[5,"SDL_GetRenderTarget","","",null,null],[5,"SDL_RenderSetLogicalSize","","",null,null],[5,"SDL_RenderGetLogicalSize","","",null,null],[5,"SDL_RenderSetViewport","","",null,null],[5,"SDL_RenderGetViewport","","",null,null],[5,"SDL_RenderSetClipRect","","",null,null],[5,"SDL_RenderGetClipRect","","",null,null],[5,"SDL_RenderSetScale","","",null,null],[5,"SDL_RenderGetScale","","",null,null],[5,"SDL_SetRenderDrawColor","","",null,null],[5,"SDL_GetRenderDrawColor","","",null,null],[5,"SDL_SetRenderDrawBlendMode","","",null,null],[5,"SDL_GetRenderDrawBlendMode","","",null,null],[5,"SDL_RenderClear","","",null,null],[5,"SDL_RenderDrawPoint","","",null,null],[5,"SDL_RenderDrawPoints","","",null,null],[5,"SDL_RenderDrawLine","","",null,null],[5,"SDL_RenderDrawLines","","",null,null],[5,"SDL_RenderDrawRect","","",null,null],[5,"SDL_RenderDrawRects","","",null,null],[5,"SDL_RenderFillRect","","",null,null],[5,"SDL_RenderFillRects","","",null,null],[5,"SDL_RenderCopy","","",null,null],[5,"SDL_RenderCopyEx","","",null,null],[5,"SDL_RenderReadPixels","","",null,null],[5,"SDL_RenderPresent","","",null,null],[5,"SDL_DestroyTexture","","",null,null],[5,"SDL_DestroyRenderer","","",null,null],[5,"SDL_GL_BindTexture","","",null,null],[5,"SDL_GL_UnbindTexture","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_RendererFlags","","",null,null],[6,"SDL_TextureAccess","","",null,null],[6,"SDL_TextureModulate","","",null,null],[6,"SDL_RendererFlip","","",null,null],[6,"SDL_BlendMode","","",null,null],[17,"SDL_RENDERER_SOFTWARE","","",null,null],[17,"SDL_RENDERER_ACCELERATED","","",null,null],[17,"SDL_RENDERER_PRESENTVSYNC","","",null,null],[17,"SDL_RENDERER_TARGETTEXTURE","","",null,null],[17,"SDL_TEXTUREACCESS_STATIC","","",null,null],[17,"SDL_TEXTUREACCESS_STREAMING","","",null,null],[17,"SDL_TEXTUREACCESS_TARGET","","",null,null],[17,"SDL_TEXTUREMODULATE_NONE","","",null,null],[17,"SDL_TEXTUREMODULATE_COLOR","","",null,null],[17,"SDL_TEXTUREMODULATE_ALPHA","","",null,null],[17,"SDL_FLIP_NONE","","",null,null],[17,"SDL_FLIP_HORIZONTAL","","",null,null],[17,"SDL_FLIP_VERTICAL","","",null,null],[17,"SDL_BLENDMODE_NONE","","",null,null],[17,"SDL_BLENDMODE_BLEND","","",null,null],[17,"SDL_BLENDMODE_ADD","","",null,null],[17,"SDL_BLENDMODE_MOD","","",null,null],[0,"rwops","sdl2_sys","",null,null],[3,"SDL_RWops","sdl2_sys::rwops","",null,null],[12,"size","","",21,null],[12,"seek","","",21,null],[12,"read","","",21,null],[12,"write","","",21,null],[12,"close","","",21,null],[12,"type_","","",21,null],[5,"SDL_RWFromFile","","",null,null],[5,"SDL_RWFromFP","","",null,null],[5,"SDL_RWFromMem","","",null,null],[5,"SDL_RWFromConstMem","","",null,null],[5,"SDL_AllocRW","","",null,null],[5,"SDL_FreeRW","","",null,null],[6,"SDL_bool","","",null,null],[7,"RW_SEEK_SET","","",null,null],[7,"RW_SEEK_CUR","","",null,null],[7,"RW_SEEK_END","","",null,null],[0,"surface","sdl2_sys","",null,null],[3,"SDL_BlitMap","sdl2_sys::surface","",null,null],[3,"SDL_Surface","","",null,null],[12,"flags","","",22,null],[12,"format","","",22,null],[12,"w","","",22,null],[12,"h","","",22,null],[12,"pitch","","",22,null],[12,"pixels","","",22,null],[12,"userdata","","",22,null],[12,"locked","","",22,null],[12,"lock_data","","",22,null],[12,"clip_rect","","",22,null],[12,"map","","",22,null],[12,"refcount","","",22,null],[5,"SDL_CreateRGBSurface","","",null,null],[5,"SDL_CreateRGBSurfaceFrom","","",null,null],[5,"SDL_FreeSurface","","",null,null],[5,"SDL_SetSurfacePalette","","",null,null],[5,"SDL_LockSurface","","",null,null],[5,"SDL_UnlockSurface","","",null,null],[5,"SDL_LoadBMP_RW","","",null,null],[5,"SDL_SaveBMP_RW","","",null,null],[5,"SDL_SetSurfaceRLE","","",null,null],[5,"SDL_SetColorKey","","",null,null],[5,"SDL_GetColorKey","","",null,null],[5,"SDL_SetSurfaceColorMod","","",null,null],[5,"SDL_GetSurfaceColorMod","","",null,null],[5,"SDL_SetSurfaceAlphaMod","","",null,null],[5,"SDL_GetSurfaceAlphaMod","","",null,null],[5,"SDL_SetSurfaceBlendMode","","",null,null],[5,"SDL_GetSurfaceBlendMode","","",null,null],[5,"SDL_SetClipRect","","",null,null],[5,"SDL_GetClipRect","","",null,null],[5,"SDL_ConvertSurface","","",null,null],[5,"SDL_ConvertSurfaceFormat","","",null,null],[5,"SDL_ConvertPixels","","",null,null],[5,"SDL_FillRect","","",null,null],[5,"SDL_FillRects","","",null,null],[5,"SDL_UpperBlit","","",null,null],[5,"SDL_LowerBlit","","",null,null],[5,"SDL_SoftStretch","","",null,null],[5,"SDL_UpperBlitScaled","","",null,null],[5,"SDL_LowerBlitScaled","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_SurfaceFlag","","",null,null],[17,"SDL_SWSURFACE","","",null,null],[17,"SDL_PREALLOC","","",null,null],[17,"SDL_RLEACCEL","","",null,null],[17,"SDL_DONTFREE","","",null,null],[0,"touch","sdl2_sys","",null,null],[3,"Finger","sdl2_sys::touch","",null,null],[5,"SDL_GetNumTouchDevices","","",null,null],[5,"SDL_GetTouchDevice","","",null,null],[5,"SDL_GetNumTouchFingers","","",null,null],[5,"SDL_GetTouchFinger","","",null,null],[6,"SDL_TouchID","","",null,null],[6,"SDL_FingerID","","",null,null],[6,"SDL_Finger","","",null,null],[6,"TouchDevice","","",null,null],[11,"clone","","",23,{"inputs":[{"name":"finger"}],"output":{"name":"finger"}}],[11,"eq","","",23,{"inputs":[{"name":"finger"},{"name":"finger"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"finger"},{"name":"finger"}],"output":{"name":"bool"}}],[0,"video","sdl2_sys","",null,null],[3,"SDL_Window","sdl2_sys::video","",null,null],[3,"SDL_DisplayMode","","",null,null],[12,"format","","",24,null],[12,"w","","",24,null],[12,"h","","",24,null],[12,"refresh_rate","","",24,null],[12,"driverdata","","",24,null],[4,"SDL_WindowFlags","","",null,null],[13,"SDL_WINDOW_FULLSCREEN","","",25,null],[13,"SDL_WINDOW_OPENGL","","",25,null],[13,"SDL_WINDOW_SHOWN","","",25,null],[13,"SDL_WINDOW_HIDDEN","","",25,null],[13,"SDL_WINDOW_BORDERLESS","","",25,null],[13,"SDL_WINDOW_RESIZABLE","","",25,null],[13,"SDL_WINDOW_MINIMIZED","","",25,null],[13,"SDL_WINDOW_MAXIMIZED","","",25,null],[13,"SDL_WINDOW_INPUT_GRABBED","","",25,null],[13,"SDL_WINDOW_INPUT_FOCUS","","",25,null],[13,"SDL_WINDOW_MOUSE_FOCUS","","",25,null],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",25,null],[13,"SDL_WINDOW_FOREIGN","","",25,null],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",25,null],[4,"SDL_WindowEventID","","",null,null],[13,"SDL_WINDOWEVENT_NONE","","",26,null],[13,"SDL_WINDOWEVENT_SHOWN","","",26,null],[13,"SDL_WINDOWEVENT_HIDDEN","","",26,null],[13,"SDL_WINDOWEVENT_EXPOSED","","",26,null],[13,"SDL_WINDOWEVENT_MOVED","","",26,null],[13,"SDL_WINDOWEVENT_RESIZED","","",26,null],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",26,null],[13,"SDL_WINDOWEVENT_MINIMIZED","","",26,null],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",26,null],[13,"SDL_WINDOWEVENT_RESTORED","","",26,null],[13,"SDL_WINDOWEVENT_ENTER","","",26,null],[13,"SDL_WINDOWEVENT_LEAVE","","",26,null],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",26,null],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",26,null],[13,"SDL_WINDOWEVENT_CLOSE","","",26,null],[4,"SDL_GLattr","","",null,null],[13,"SDL_GL_RED_SIZE","","",27,null],[13,"SDL_GL_GREEN_SIZE","","",27,null],[13,"SDL_GL_BLUE_SIZE","","",27,null],[13,"SDL_GL_ALPHA_SIZE","","",27,null],[13,"SDL_GL_BUFFER_SIZE","","",27,null],[13,"SDL_GL_DOUBLEBUFFER","","",27,null],[13,"SDL_GL_DEPTH_SIZE","","",27,null],[13,"SDL_GL_STENCIL_SIZE","","",27,null],[13,"SDL_GL_ACCUM_RED_SIZE","","",27,null],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",27,null],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",27,null],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",27,null],[13,"SDL_GL_STEREO","","",27,null],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",27,null],[13,"SDL_GL_MULTISAMPLESAMPLES","","",27,null],[13,"SDL_GL_ACCELERATED_VISUAL","","",27,null],[13,"SDL_GL_RETAINED_BACKING","","",27,null],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",27,null],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",27,null],[13,"SDL_GL_CONTEXT_EGL","","",27,null],[13,"SDL_GL_CONTEXT_FLAGS","","",27,null],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",27,null],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",27,null],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",27,null],[4,"SDL_GLprofile","","",null,null],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",28,null],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",28,null],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",28,null],[5,"SDL_GetNumVideoDrivers","","",null,null],[5,"SDL_GetVideoDriver","","",null,null],[5,"SDL_VideoInit","","",null,null],[5,"SDL_VideoQuit","","",null,null],[5,"SDL_GetCurrentVideoDriver","","",null,null],[5,"SDL_GetNumVideoDisplays","","",null,null],[5,"SDL_GetDisplayName","","",null,null],[5,"SDL_GetDisplayBounds","","",null,null],[5,"SDL_GetNumDisplayModes","","",null,null],[5,"SDL_GetDisplayMode","","",null,null],[5,"SDL_GetDesktopDisplayMode","","",null,null],[5,"SDL_GetCurrentDisplayMode","","",null,null],[5,"SDL_GetClosestDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayIndex","","",null,null],[5,"SDL_SetWindowDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayMode","","",null,null],[5,"SDL_GetWindowPixelFormat","","",null,null],[5,"SDL_CreateWindow","","",null,null],[5,"SDL_CreateWindowFrom","","",null,null],[5,"SDL_GetWindowID","","",null,null],[5,"SDL_GetWindowFromID","","",null,null],[5,"SDL_GetWindowFlags","","",null,null],[5,"SDL_SetWindowTitle","","",null,null],[5,"SDL_GetWindowTitle","","",null,null],[5,"SDL_SetWindowIcon","","",null,null],[5,"SDL_SetWindowData","","",null,null],[5,"SDL_GetWindowData","","",null,null],[5,"SDL_SetWindowPosition","","",null,null],[5,"SDL_GetWindowPosition","","",null,null],[5,"SDL_SetWindowSize","","",null,null],[5,"SDL_GetWindowSize","","",null,null],[5,"SDL_SetWindowMinimumSize","","",null,null],[5,"SDL_GetWindowMinimumSize","","",null,null],[5,"SDL_SetWindowMaximumSize","","",null,null],[5,"SDL_GetWindowMaximumSize","","",null,null],[5,"SDL_SetWindowBordered","","",null,null],[5,"SDL_ShowWindow","","",null,null],[5,"SDL_HideWindow","","",null,null],[5,"SDL_RaiseWindow","","",null,null],[5,"SDL_MaximizeWindow","","",null,null],[5,"SDL_MinimizeWindow","","",null,null],[5,"SDL_RestoreWindow","","",null,null],[5,"SDL_SetWindowFullscreen","","",null,null],[5,"SDL_GetWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurfaceRects","","",null,null],[5,"SDL_SetWindowGrab","","",null,null],[5,"SDL_GetWindowGrab","","",null,null],[5,"SDL_SetWindowBrightness","","",null,null],[5,"SDL_GetWindowBrightness","","",null,null],[5,"SDL_SetWindowGammaRamp","","",null,null],[5,"SDL_GetWindowGammaRamp","","",null,null],[5,"SDL_DestroyWindow","","",null,null],[5,"SDL_IsScreenSaverEnabled","","",null,null],[5,"SDL_EnableScreenSaver","","",null,null],[5,"SDL_DisableScreenSaver","","",null,null],[5,"SDL_GL_GetDrawableSize","","",null,null],[5,"SDL_GL_LoadLibrary","","",null,null],[5,"SDL_GL_GetProcAddress","","",null,null],[5,"SDL_GL_UnloadLibrary","","",null,null],[5,"SDL_GL_ExtensionSupported","","",null,null],[5,"SDL_GL_SetAttribute","","",null,null],[5,"SDL_GL_GetAttribute","","",null,null],[5,"SDL_GL_CreateContext","","",null,null],[5,"SDL_GL_MakeCurrent","","",null,null],[5,"SDL_GL_GetCurrentWindow","","",null,null],[5,"SDL_GL_GetCurrentContext","","",null,null],[5,"SDL_GL_SetSwapInterval","","",null,null],[5,"SDL_GL_GetSwapInterval","","",null,null],[5,"SDL_GL_SwapWindow","","",null,null],[5,"SDL_GL_DeleteContext","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_WindowPos","","",null,null],[6,"SDL_GLContext","","",null,null],[17,"SDL_WINDOWPOS_CENTERED","","",null,null],[17,"SDL_WINDOWPOS_UNDEFINED","","",null,null],[11,"clone","","",25,{"inputs":[{"name":"sdl_windowflags"}],"output":{"name":"sdl_windowflags"}}],[11,"clone","","",26,{"inputs":[{"name":"sdl_windoweventid"}],"output":{"name":"sdl_windoweventid"}}],[11,"clone","","",27,{"inputs":[{"name":"sdl_glattr"}],"output":{"name":"sdl_glattr"}}],[11,"from_i64","","",27,{"inputs":[{"name":"sdl_glattr"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",27,{"inputs":[{"name":"sdl_glattr"},{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"sdl_glprofile"}],"output":{"name":"sdl_glprofile"}}],[0,"mouse","sdl2_sys","",null,null],[5,"SDL_GetMouseFocus","sdl2_sys::mouse","",null,null],[5,"SDL_GetMouseState","","",null,null],[5,"SDL_GetRelativeMouseState","","",null,null],[5,"SDL_WarpMouseInWindow","","",null,null],[5,"SDL_SetRelativeMouseMode","","",null,null],[5,"SDL_GetRelativeMouseMode","","",null,null],[5,"SDL_CreateCursor","","",null,null],[5,"SDL_CreateColorCursor","","",null,null],[5,"SDL_CreateSystemCursor","","",null,null],[5,"SDL_SetCursor","","",null,null],[5,"SDL_GetCursor","","",null,null],[5,"SDL_GetDefaultCursor","","",null,null],[5,"SDL_FreeCursor","","",null,null],[5,"SDL_ShowCursor","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_Cursor","","",null,null],[6,"SDL_SystemCursor","","",null,null],[6,"SDL_MouseState","","",null,null],[17,"SDL_SYSTEM_CURSOR_ARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_IBEAM","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAIT","","",null,null],[17,"SDL_SYSTEM_CURSOR_CROSSHAIR","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAITARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENWSE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENESW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEWE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENS","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEALL","","",null,null],[17,"SDL_SYSTEM_CURSOR_NO","","",null,null],[17,"SDL_SYSTEM_CURSOR_HAND","","",null,null],[17,"SDL_NUM_SYSTEM_CURSORS","","",null,null],[17,"SDL_DISABLE","","",null,null],[17,"SDL_ENABLE","","",null,null],[17,"SDL_QUERY","","",null,null],[17,"SDL_BUTTON_LEFT","","",null,null],[17,"SDL_BUTTON_MIDDLE","","",null,null],[17,"SDL_BUTTON_RIGHT","","",null,null],[17,"SDL_BUTTON_X1","","",null,null],[17,"SDL_BUTTON_X2","","",null,null],[17,"SDL_BUTTON_LMASK","","",null,null],[17,"SDL_BUTTON_MMASK","","",null,null],[17,"SDL_BUTTON_RMASK","","",null,null],[17,"SDL_BUTTON_X1MASK","","",null,null],[17,"SDL_BUTTON_X2MASK","","",null,null],[0,"sdl","sdl2_sys","",null,null],[5,"SDL_ClearError","sdl2_sys::sdl","",null,null],[5,"SDL_Error","","",null,null],[5,"SDL_SetError","","",null,null],[5,"SDL_GetError","","",null,null],[5,"SDL_Init","","",null,null],[5,"SDL_InitSubSystem","","",null,null],[5,"SDL_QuitSubSystem","","",null,null],[5,"SDL_WasInit","","",null,null],[5,"SDL_Quit","","",null,null],[5,"SDL_GetTicks","","",null,null],[6,"SDL_errorcode","","",null,null],[6,"SDL_InitFlag","","",null,null],[17,"SDL_ENOMEM","","",null,null],[17,"SDL_EFREAD","","",null,null],[17,"SDL_EFWRITE","","",null,null],[17,"SDL_EFSEEK","","",null,null],[17,"SDL_UNSUPPORTED","","",null,null],[17,"SDL_LASTERROR","","",null,null],[17,"SDL_INIT_TIMER","","",null,null],[17,"SDL_INIT_AUDIO","","",null,null],[17,"SDL_INIT_VIDEO","","",null,null],[17,"SDL_INIT_JOYSTICK","","",null,null],[17,"SDL_INIT_HAPTIC","","",null,null],[17,"SDL_INIT_GAMECONTROLLER","","",null,null],[17,"SDL_INIT_EVENTS","","",null,null],[17,"SDL_INIT_NOPARACHUTE","","",null,null],[17,"SDL_INIT_EVERYTHING","","",null,null],[0,"timer","sdl2_sys","",null,null],[5,"SDL_GetTicks","sdl2_sys::timer","",null,null],[5,"SDL_GetPerformanceCounter","","",null,null],[5,"SDL_GetPerformanceFrequency","","",null,null],[5,"SDL_Delay","","",null,null],[5,"SDL_AddTimer","","",null,null],[5,"SDL_RemoveTimer","","",null,null],[6,"SDL_TimerCallback","","",null,null],[6,"SDL_TimerID","","",null,null],[0,"hint","sdl2_sys","",null,null],[4,"SDL_HintPriority","sdl2_sys::hint","",null,null],[13,"SDL_HINT_DEFAULT","","",29,null],[13,"SDL_HINT_NORMAL","","",29,null],[13,"SDL_HINT_OVERRIDE","","",29,null],[5,"SDL_SetHint","","",null,null],[5,"SDL_GetHint","","",null,null],[5,"SDL_SetHintWithPriority","","",null,null],[6,"SDL_bool","","",null,null],[11,"clone","","",29,{"inputs":[{"name":"sdl_hintpriority"}],"output":{"name":"sdl_hintpriority"}}]],"paths":[[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBindData"],[3,"SDL_GameControllerButtonBindDataHat"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_HapticEffect"],[3,"SDL_JoystickGUID"],[3,"SDL_Keysym"],[3,"SDL_Point"],[3,"SDL_Rect"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_RendererInfo"],[3,"SDL_RWops"],[3,"SDL_Surface"],[3,"Finger"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_HintPriority"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",31,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['advapi32'] = {"items":[],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"flock","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['build'] = {"items":[[0,"","build","",null,null],[5,"link","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":null}]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
